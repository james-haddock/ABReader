<?xml version='1.0' encoding='UTF-8'?><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Index</title><link rel="stylesheet" type="text/css" href="../Styles/style0001.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.76.1"/><link rel="up" href="index.html"/><link rel="prev" href="apc.html"/><link rel="next" href="author_bios.html"/></head><body><div class="index" epub:type="index" id="id483748"><div class="titlepage" id="aid-MSDG2"><div><div><h2 class="title">Index</h2></div></div></div><div class="orm-notedivider"><hr data-AmznRemoved-M8="true"/></div><div class="note"><h3 class="title">A note on the digital index</h3><p>A link in an index entry is displayed as the section title in which that entry appears. Because some sections have multiple index markers, it is not unusual for an entry to have several links to the same section. Clicking on any link will take you directly to the place in the text in which the marker appears.</p></div><div class="orm-notedivider"><hr data-AmznRemoved-M8="true"/></div><div class="index"><div class="indexdiv"><h3>A</h3><div class="variable_list_term">abstract class</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1001">Our PizzaStore isn’t going to be very popular without some pizzas, so let’s implement them</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle1002">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">methods in, <a class="indexterm" href="part0015.xhtml#iddle1003">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Abstract Factory Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1004">What have we done?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building ingredient factories, <a class="indexterm" href="part0011.xhtml#iddle1005">Building the ingredient factories</a>, <a class="indexterm" href="part0011.xhtml#iddle1006">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1007">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1008">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle1009">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1010">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1011">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method Pattern and, <a class="indexterm" href="part0011.xhtml#iddle1012">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0011.xhtml#iddle1013">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">abstract superclasses, <a class="indexterm" href="part0008.xhtml#iddle1014">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ACM Conference, <a class="indexterm" href="part0020.xhtml#iddle1015">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1016">The Adapter Pattern explained</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adapting to Iterator Enumeration interface, <a class="indexterm" href="part0014.xhtml#iddle1017">Adapting an Enumeration to an Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1018">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dealing with remove() method, <a class="indexterm" href="part0014.xhtml#iddle1019">Dealing with the remove() method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Decorator Pattern vs., <a class="indexterm" href="part0014.xhtml#iddle1020">Writing the EnumerationIterator adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0014.xhtml#iddle1021">Adapter Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Adapter, <a class="indexterm" href="part0014.xhtml#iddle1022">Adapting an Enumeration to an Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0016.xhtml#iddle1023">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle1024">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0018.xhtml#iddle1025">Running the code...</a>, <a class="indexterm" href="part0020.xhtml#iddle1026">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1027">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching pattern with its intent, <a class="indexterm" href="part0014.xhtml#iddle1028">And now for something different...</a>, <a class="indexterm" href="part0014.xhtml#iddle1029">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Facade Pattern vs., <a class="indexterm" href="part0014.xhtml#iddle1030">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model-View-Controller, <a class="indexterm" href="part0019.xhtml#iddle1031">Adapting the Model</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object and class adapters, <a class="indexterm" href="part0014.xhtml#iddle1032">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Proxy Pattern vs., <a class="indexterm" href="part0018.xhtml#iddle1033">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">simple real world adapters, <a class="indexterm" href="part0014.xhtml#iddle1034">Real-world adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Enumeration Iterator Adapter, <a class="indexterm" href="part0014.xhtml#iddle1035">Dealing with the remove() method</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">adapters, OO (Object-Oriented)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1036">Adapters all around us</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating Two Way Adapters, <a class="indexterm" href="part0014.xhtml#iddle1037">Here’s how the Client uses the Adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in action, <a class="indexterm" href="part0014.xhtml#iddle1038">If it walks like a duck and quacks like a duck, then it must might be a duck turkey wrapped with a duck adapter...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object and class object and class, <a class="indexterm" href="part0014.xhtml#iddle1039">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">test driving, <a class="indexterm" href="part0014.xhtml#iddle1040">Test drive the adapter</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">aggregates, <a class="indexterm" href="part0016.xhtml#iddle1041">Meet the Iterator Pattern</a>, <a class="indexterm" href="part0016.xhtml#iddle1042">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Alexander, Christopher</div><blockquote class="variable_list_definition"><div class="variable_list_term">A Pattern Language, <a class="indexterm" href="part0020.xhtml#iddle1043">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Timeless Way of Building, <a class="indexterm" href="part0020.xhtml#iddle1044">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">algorithms, encapsulating</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle1045">The Template Method Pattern: Encapsulating Algorithms</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">abstracting prepareRecipe(), <a class="indexterm" href="part0015.xhtml#iddle1046">Abstracting prepareRecipe()</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Template Method Pattern and</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle1047">Meet the Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">applets in, <a class="indexterm" href="part0015.xhtml#iddle1048">Applets</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0015.xhtml#iddle1049">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle1050">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hooks in, <a class="indexterm" href="part0015.xhtml#iddle1052">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in real world, <a class="indexterm" href="part0015.xhtml#iddle1053">Template Methods in the Wild</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sorting with, <a class="indexterm" href="part0015.xhtml#iddle1054">Sorting with Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Swing and, <a class="indexterm" href="part0015.xhtml#iddle1055">Swingin’ with Frames</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0015.xhtml#iddle1056">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle and, <a class="indexterm" href="part0015.xhtml#iddle1051">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">Anti-Patterns, <a class="indexterm" href="part0020.xhtml#iddle1057">Annihilating evil with Anti-Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Applet, Template Method Pattern and, <a class="indexterm" href="part0015.xhtml#iddle1058">Applets</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Applicability section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1059">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Application Patterns, <a class="indexterm" href="part0020.xhtml#iddle1060">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Architectural Patterns, <a class="indexterm" href="part0020.xhtml#iddle1061">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ArrayList, arrays and, <a class="indexterm" href="part0016.xhtml#iddle1062">Lou and Mel’s Menu implementations</a>, <a class="indexterm" href="part0016.xhtml#iddle1063">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">arrays</div><blockquote class="variable_list_definition"><div class="variable_list_term">iteration and, <a class="indexterm" href="part0016.xhtml#iddle1064">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">iterator and hasNext() method with, <a class="indexterm" href="part0016.xhtml#iddle1065">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">iterator and next() method with, <a class="indexterm" href="part0016.xhtml#iddle1066">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">removing an element, <a class="indexterm" href="part0016.xhtml#iddle1067">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sorting with Template Method Pattern, <a class="indexterm" href="part0015.xhtml#iddle1068">Sorting with Template Method</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></div><div class="indexdiv"><h3>B</h3><div class="variable_list_term">Basham, Bryan, (Head First Servlets &amp; JSP), <a class="indexterm" href="part0019.xhtml#iddle1069">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Be the JVM solution exercises, dealing with multithreading, <a class="indexterm" href="part0012.xhtml#iddle1083">Houston, Hershey, PA we have a problem...</a>, <a class="indexterm" href="part0012.xhtml#iddle1084">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">behavior, encapsulating, <a class="indexterm" href="part0008.xhtml#iddle1072">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">behavioral patterns category, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle1070">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle1071">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">behaviors</div><blockquote class="variable_list_definition"><div class="variable_list_term">classes as, <a class="indexterm" href="part0008.xhtml#iddle1073">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">classes extended to incorporate new, <a class="indexterm" href="part0010.xhtml#iddle1074">The Open-Closed Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">declaring variables, <a class="indexterm" href="part0008.xhtml#iddle1075">Integrating the Duck Behavior</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">delegating to decorated objects while adding, <a class="indexterm" href="part0010.xhtml#iddle1076">Constructing a drink order with Decorators</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0008.xhtml#iddle1077">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating, <a class="indexterm" href="part0008.xhtml#iddle1078">The Big Picture on encapsulated behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0008.xhtml#iddle1079">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">integrating, <a class="indexterm" href="part0008.xhtml#iddle1080">Integrating the Duck Behavior</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">setting dynamically, <a class="indexterm" href="part0008.xhtml#iddle1081">Setting behavior dynamically</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Bert Bates, (Head First Servlets &amp; JSP), <a class="indexterm" href="part0019.xhtml#iddle1082">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Bridge Pattern, <a class="indexterm" href="part0021.xhtml#iddle1085">Bridge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Builder Pattern, <a class="indexterm" href="part0021.xhtml#iddle1086">Builder</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Business Process Patterns, <a class="indexterm" href="part0020.xhtml#iddle1087">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>C</h3><div class="variable_list_term">Caching Proxy, as form of Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle1088">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle1089">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Cafe Menu, integrating into framework (Iterator Pattern)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1090">Taking a look at the Café Menu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking code, <a class="indexterm" href="part0016.xhtml#iddle1091">Reworking the Café Menu code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">CD covers, displaying using Proxy Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1092">Displaying CD covers</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code for, <a class="indexterm" href="part0019.xhtml#iddle1093">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle1094">Designing the CD cover Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1095">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing viewer, <a class="indexterm" href="part0018.xhtml#iddle1096">Testing the CD Cover Viewer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle1097">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Chain of Responsibility Pattern, <a class="indexterm" href="part0021.xhtml#iddle1098">Chain of Responsibility</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">change</div><blockquote class="variable_list_definition"><div class="variable_list_term">constant in software development, <a class="indexterm" href="part0008.xhtml#iddle1099">The one constant in software development</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">identifying, <a class="indexterm" href="part0009.xhtml#iddle1100">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">iteration and, <a class="indexterm" href="part0016.xhtml#iddle1101">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Chocolate Factory, using Singleton Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0012.xhtml#iddle1102">The Chocolate Factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">fixing Chocolate Boiler code, <a class="indexterm" href="part0012.xhtml#iddle1103">Meanwhile, back at the Chocolate Factory...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">class adapters, object vs., <a class="indexterm" href="part0014.xhtml#iddle1104">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class design, of Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1105">The Observer Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class hierarchies, parallel, <a class="indexterm" href="part0011.xhtml#iddle1133">Another perspective: parallel class hierarchies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class patterns, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle1136">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">classes., <a class="indexterm" href="part0010.xhtml#iddle1106">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"><div class="variable_list_term">(see also subclasses)</div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">abstract, <a class="indexterm" href="part0011.xhtml#iddle1107">Our PizzaStore isn’t going to be very popular without some pizzas, so let’s implement them</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adapter, <a class="indexterm" href="part0014.xhtml#iddle1108">Here’s how the Client uses the Adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle1109">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern, <a class="indexterm" href="part0014.xhtml#iddle1110">Adapter Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">altering decorator, <a class="indexterm" href="part0010.xhtml#iddle1111">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">as behaviors, <a class="indexterm" href="part0008.xhtml#iddle1112">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">command</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1113">The Command Pattern means lots of command classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing method references, <a class="indexterm" href="part0013.xhtml#iddle1114">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using lambda expressions, <a class="indexterm" href="part0013.xhtml#iddle1115">Simplifying the Remote Control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">creating, <a class="indexterm" href="part0008.xhtml#iddle1116">Separating what changes from what stays the same</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method Pattern creator and product, <a class="indexterm" href="part0011.xhtml#iddle1117">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">having single responsibility, <a class="indexterm" href="part0016.xhtml#iddle1118">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">high-level component, <a class="indexterm" href="part0011.xhtml#iddle1119">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">identifying as Proxy class, <a class="indexterm" href="part0018.xhtml#iddle1120">Running the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Open-Closed Principle, <a class="indexterm" href="part0010.xhtml#iddle1121">The Open-Closed Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state</div><blockquote class="variable_list_definition"><div class="variable_list_term">defining, <a class="indexterm" href="part0017.xhtml#iddle1122">Defining the State interfaces and classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0017.xhtml#iddle1123">Implementing our State classes</a>, <a class="indexterm" href="part0017.xhtml#iddle1124">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle1125">We still need to finish the Gumball 1 in 10 game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">increasing number in design of, <a class="indexterm" href="part0017.xhtml#iddle1126">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking state classes, <a class="indexterm" href="part0017.xhtml#iddle1127">Reworking the Gumball Machine</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state transitions in, <a class="indexterm" href="part0017.xhtml#iddle1128">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">using composition with, <a class="indexterm" href="part0008.xhtml#iddle1129">HAS-A can be better than IS-A</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using instance variables instead of, <a class="indexterm" href="part0010.xhtml#iddle1130">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using instead of Singletons static, <a class="indexterm" href="part0012.xhtml#iddle1131">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using new operator for instantiating concrete, <a class="indexterm" href="part0011.xhtml#iddle1132">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Classification section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1134">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">classloaders, using with Singletons, <a class="indexterm" href="part0012.xhtml#iddle1135">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">client heap, <a class="indexterm" href="part0018.xhtml#iddle1137">Remote methods 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">client helper (stubs), in RMI, <a class="indexterm" href="part0018.xhtml#iddle1138">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle1139">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle1140">How does the client get the stub object?</a>, <a class="indexterm" href="part0018.xhtml#iddle1141">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Code Magnets exercise</div><blockquote class="variable_list_definition"><div class="variable_list_term">for DinerMenu Iterator, <a class="indexterm" href="part0016.xhtml#iddle1142">Iterators and Collections</a>, <a class="indexterm" href="part0016.xhtml#iddle1143">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">for Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1144">Reworking the Weather Station with the built-in support</a>, <a class="indexterm" href="part0009.xhtml#iddle1145">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">cohesion, <a class="indexterm" href="part0016.xhtml#iddle1146">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Collaborations section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1147">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">collection classes, <a class="indexterm" href="part0016.xhtml#iddle1148">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">collection of objects</div><blockquote class="variable_list_definition"><div class="variable_list_term">abstracting with Iterator Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1149">The Iterator and Composite Patterns: Well-Managed Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterators, <a class="indexterm" href="part0016.xhtml#iddle1150">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code using java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1151">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">remove() method in, <a class="indexterm" href="part0016.xhtml#iddle1152">Making some improvements...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">implementing Iterators for, <a class="indexterm" href="part0016.xhtml#iddle1153">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">integrating into framework</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1154">Taking a look at the Café Menu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking code, <a class="indexterm" href="part0016.xhtml#iddle1155">Reworking the Café Menu code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">meaning of, <a class="indexterm" href="part0016.xhtml#iddle1156">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Composite Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1157">Designing Menus with Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing components, <a class="indexterm" href="part0016.xhtml#iddle1158">Implementing the Menu Component</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0016.xhtml#iddle1159">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">tree structure, <a class="indexterm" href="part0016.xhtml#iddle1160">The Composite Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1161">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using with Iterators, <a class="indexterm" href="part0016.xhtml#iddle1162">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">using whole-part relationships, <a class="indexterm" href="part0016.xhtml#iddle1163">The magic of Iterator &amp; Composite together...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Collections, Iterators and, <a class="indexterm" href="part0016.xhtml#iddle1164">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Combining Patterns</div><blockquote class="variable_list_definition"><div class="variable_list_term">Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle1165">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle1166">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram for, <a class="indexterm" href="part0019.xhtml#iddle1167">A duck’s eye view: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1168">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1169">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Iterator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1170">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1171">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">command classes, in Command Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1172">The Command Pattern means lots of command classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing method references, <a class="indexterm" href="part0013.xhtml#iddle1173">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using lambda expressions, <a class="indexterm" href="part0013.xhtml#iddle1174">Simplifying the Remote Control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">command objects</div><blockquote class="variable_list_definition"><div class="variable_list_term">encapsulating requests to do something, <a class="indexterm" href="part0013.xhtml#iddle1175">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">mapping, <a class="indexterm" href="part0013.xhtml#iddle1176">From the Diner to the Command Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0013.xhtml#iddle1177">Using the command object</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Command Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">command classes in</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1178">The Command Pattern means lots of command classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing method references, <a class="indexterm" href="part0013.xhtml#iddle1179">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using lambda expressions, <a class="indexterm" href="part0013.xhtml#iddle1180">Simplifying the Remote Control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">command objects</div><blockquote class="variable_list_definition"><div class="variable_list_term">building, <a class="indexterm" href="part0013.xhtml#iddle1181">Our first command object</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating requests to do something, <a class="indexterm" href="part0013.xhtml#iddle1182">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">mapping, <a class="indexterm" href="part0013.xhtml#iddle1183">From the Diner to the Command Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0013.xhtml#iddle1184">Using the command object</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0013.xhtml#iddle1185">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dumb and smart command objects, <a class="indexterm" href="part0013.xhtml#iddle1186">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1187">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1188">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">home automation remote control</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1189">Taking a look at the vendor classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building, <a class="indexterm" href="part0013.xhtml#iddle1190">Our first command object</a>, <a class="indexterm" href="part0013.xhtml#iddle1191">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0013.xhtml#iddle1192">The Command Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">command classes in, <a class="indexterm" href="part0013.xhtml#iddle1193">The Command Pattern means lots of command classes</a>, <a class="indexterm" href="part0013.xhtml#iddle1194">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating commands to be loaded, <a class="indexterm" href="part0013.xhtml#iddle1195">The Command Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">defining, <a class="indexterm" href="part0013.xhtml#iddle1196">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0013.xhtml#iddle1197">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">display of on and off slots, <a class="indexterm" href="part0013.xhtml#iddle1198">Check out the results of all those lambda expression commands...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0013.xhtml#iddle1199">Implementing the Commands</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">macro commands, <a class="indexterm" href="part0013.xhtml#iddle1200">Every remote needs a Party Mode!</a>, <a class="indexterm" href="part0013.xhtml#iddle1201">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1202">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">mapping, <a class="indexterm" href="part0013.xhtml#iddle1203">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle1204">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Null Object in, <a class="indexterm" href="part0013.xhtml#iddle1205">Now, let’s check out the execution of our remote control test...</a>, <a class="indexterm" href="part0013.xhtml#iddle1206">Test the remote control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0013.xhtml#iddle1207">Using the command object</a>, <a class="indexterm" href="part0013.xhtml#iddle1208">Putting the Remote Control through its paces</a>, <a class="indexterm" href="part0013.xhtml#iddle1209">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1210">Test the remote control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">undo commands, <a class="indexterm" href="part0013.xhtml#iddle1211">Time to write that documentation...</a>, <a class="indexterm" href="part0013.xhtml#iddle1212">Get ready to test the ceiling fan</a>, <a class="indexterm" href="part0013.xhtml#iddle1213">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1214">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">vendor classes for, <a class="indexterm" href="part0013.xhtml#iddle1215">Taking a look at the vendor classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing documentation, <a class="indexterm" href="part0013.xhtml#iddle1216">Time to write that documentation...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">logging requests using, <a class="indexterm" href="part0013.xhtml#iddle1217">More uses of the Command Pattern: logging requests</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">mapping, <a class="indexterm" href="part0013.xhtml#iddle1218">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle1219">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Null Object, <a class="indexterm" href="part0013.xhtml#iddle1220">Now, let’s check out the execution of our remote control test...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">queuing requests using, <a class="indexterm" href="part0013.xhtml#iddle1221">More uses of the Command Pattern: queuing requests</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">understanding, <a class="indexterm" href="part0013.xhtml#iddle1222">Meanwhile, back at the Diner..., or, A brief introduction to the Command Pattern</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Complexity Hiding Proxy, <a class="indexterm" href="part0018.xhtml#iddle1223">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">components of object, <a class="indexterm" href="part0014.xhtml#iddle1224">The Principle of Least Knowledge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Iterator, <a class="indexterm" href="part0016.xhtml#iddle1225">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1226">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0016.xhtml#iddle1227">The Composite Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dessert submenu using</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1228">Just when we thought it was safe...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0016.xhtml#iddle1229">Designing Menus with Composite</a>, <a class="indexterm" href="part0016.xhtml#iddle1230">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0016.xhtml#iddle1231">Implementing the Menu Component</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0016.xhtml#iddle1232">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Iterators in, <a class="indexterm" href="part0016.xhtml#iddle1233">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0016.xhtml#iddle1234">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle1235">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle1236">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1237">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model 2, <a class="indexterm" href="part0019.xhtml#iddle1238">Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model-View-Controller, <a class="indexterm" href="part0019.xhtml#iddle1239">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1240">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Iterator Pattern and, <a class="indexterm" href="part0016.xhtml#iddle1241">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on implementation issues, <a class="indexterm" href="part0016.xhtml#iddle1242">The magic of Iterator &amp; Composite together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">safety versus transparency, <a class="indexterm" href="part0019.xhtml#iddle1243">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">transparency in, <a class="indexterm" href="part0016.xhtml#iddle1244">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">tree structure of, <a class="indexterm" href="part0016.xhtml#iddle1245">The Composite Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1246">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">try/catch, using, <a class="indexterm" href="part0016.xhtml#iddle1247">The magic of Iterator &amp; Composite together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using with Iterator, <a class="indexterm" href="part0016.xhtml#iddle1248">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">vegetarian menu using Iterators, <a class="indexterm" href="part0016.xhtml#iddle1249">Give me the vegetarian menu</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">composition</div><blockquote class="variable_list_definition"><div class="variable_list_term">adding behavior at runtime, <a class="indexterm" href="part0010.xhtml#iddle1250">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">favoring over inheritance, <a class="indexterm" href="part0008.xhtml#iddle1251">HAS-A can be better than IS-A</a>, <a class="indexterm" href="part0010.xhtml#iddle1252">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">inheritance vs., <a class="indexterm" href="part0010.xhtml#iddle1253">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object adapters and, <a class="indexterm" href="part0014.xhtml#iddle1254">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">compound patterns, using</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1255">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Model 2</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1256">MVC and the Web</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1257">Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">from cell phone, <a class="indexterm" href="part0019.xhtml#iddle1258">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1259">Design Patterns and Model 2</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern, <a class="indexterm" href="part0019.xhtml#iddle1260">Strategy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Model-View-Controller</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1261">If Elvis were a compound pattern, his name would be Model-View-Controller, and he’d be singing a little song like this...</a>, <a class="indexterm" href="part0019.xhtml#iddle1262">Meet the Model-View-Controller</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle1263">Exploring Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Beat model, <a class="indexterm" href="part0019.xhtml#iddle1264">Meet the Java DJ View</a>, <a class="indexterm" href="part0019.xhtml#iddle1265">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1266">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1267">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">controllers per view, <a class="indexterm" href="part0019.xhtml#iddle1268">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Heart controller, <a class="indexterm" href="part0019.xhtml#iddle1269">Now we’re ready for a HeartController</a>, <a class="indexterm" href="part0019.xhtml#iddle1270">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Heart model, <a class="indexterm" href="part0019.xhtml#iddle1271">Exploring Strategy</a>, <a class="indexterm" href="part0019.xhtml#iddle1272">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing controller, <a class="indexterm" href="part0019.xhtml#iddle1273">Now for the Controller</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing DJ View, <a class="indexterm" href="part0019.xhtml#iddle1274">Using MVC to control the beat...</a>, <a class="indexterm" href="part0019.xhtml#iddle1275">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Mediator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1276">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">model in, <a class="indexterm" href="part0019.xhtml#iddle1277">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1278">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1279">Building the pieces</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">song, <a class="indexterm" href="part0019.xhtml#iddle1280">If Elvis were a compound pattern, his name would be Model-View-Controller, and he’d be singing a little song like this...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state of model, <a class="indexterm" href="part0019.xhtml#iddle1281">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern, <a class="indexterm" href="part0019.xhtml#iddle1282">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1283">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle1284">Exploring Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0019.xhtml#iddle1285">Putting it all together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">views accessing model state methods, <a class="indexterm" href="part0019.xhtml#iddle1286">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">web and, <a class="indexterm" href="part0019.xhtml#iddle1287">MVC and the Web</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">multiple patterns vs., <a class="indexterm" href="part0019.xhtml#iddle1288">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">concrete classes</div><blockquote class="variable_list_definition"><div class="variable_list_term">deriving from, <a class="indexterm" href="part0011.xhtml#iddle1289">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Pattern and, <a class="indexterm" href="part0011.xhtml#iddle1290">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">getting rid of, <a class="indexterm" href="part0011.xhtml#iddle1291">Reworking the PizzaStore class</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">instantiating objects and, <a class="indexterm" href="part0011.xhtml#iddle1292">Looking at object dependencies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using new operator for instantiating, <a class="indexterm" href="part0011.xhtml#iddle1293">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">variables holding reference to, <a class="indexterm" href="part0011.xhtml#iddle1294">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">concrete creators, <a class="indexterm" href="part0011.xhtml#iddle1295">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete implementation object, assigning, <a class="indexterm" href="part0008.xhtml#iddle1296">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete methods, as hooks, <a class="indexterm" href="part0015.xhtml#iddle1297">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete subclasses</div><blockquote class="variable_list_definition"><div class="variable_list_term">abstract class methods defined by, <a class="indexterm" href="part0015.xhtml#iddle1298">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Pizza Store project, <a class="indexterm" href="part0011.xhtml#iddle1299">Allowing the subclasses to decide</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Consequences section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1300">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">constant in software development, <a class="indexterm" href="part0008.xhtml#iddle1301">The one constant in software development</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">controlling object access, using Proxy Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1302">The Proxy Pattern: Controlling Object Access</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Caching Proxy, <a class="indexterm" href="part0018.xhtml#iddle1303">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle1304">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Complexity Hiding Proxy, <a class="indexterm" href="part0018.xhtml#iddle1305">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Copy-On-Write Proxy, <a class="indexterm" href="part0018.xhtml#iddle1306">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Firewall Proxy, <a class="indexterm" href="part0018.xhtml#iddle1307">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Protection Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1308">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1309">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle1310">The PersonBean implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">protecting subjects, <a class="indexterm" href="part0018.xhtml#iddle1311">Five-minute drama: protecting subjects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle1312">Testing the matchmaking service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1313">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Remote Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1314">Testing the Monitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding to monitoring code, <a class="indexterm" href="part0018.xhtml#iddle1315">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">preparing for remote service, <a class="indexterm" href="part0018.xhtml#iddle1316">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle1317">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reusing client for, <a class="indexterm" href="part0018.xhtml#iddle1318">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1319">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">role of, <a class="indexterm" href="part0018.xhtml#iddle1320">The role of the ‘remote proxy’</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle1321">Writing the Monitor test drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects and, <a class="indexterm" href="part0018.xhtml#iddle1322">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Smart Reference Proxy, <a class="indexterm" href="part0018.xhtml#iddle1323">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Synchronization Proxy, <a class="indexterm" href="part0018.xhtml#iddle1324">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Virtual Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1325">Get ready for Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle1326">Designing the CD cover Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1327">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle1328">Testing the CD Cover Viewer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle1329">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">Copy-On-Write Proxy, <a class="indexterm" href="part0018.xhtml#iddle1330">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">create method</div><blockquote class="variable_list_definition"><div class="variable_list_term">replacing new operator with, <a class="indexterm" href="part0011.xhtml#iddle1331">Reworking the PizzaStore class</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">static method vs., <a class="indexterm" href="part0011.xhtml#iddle1332">Building a simple pizza factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using subclasses with, <a class="indexterm" href="part0011.xhtml#iddle1333">Allowing the subclasses to decide</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">creating static classes instead of Singleton, <a class="indexterm" href="part0012.xhtml#iddle1334">Houston, Hershey, PA we have a problem...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creational patterns category, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle1335">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle1336">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creator classes, in Factory Method Pattern, <a class="indexterm" href="part0011.xhtml#iddle1337">It’s finally time to meet the Factory Method Pattern</a>, <a class="indexterm" href="part0011.xhtml#iddle1338">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">crossword puzzle, <a class="indexterm" href="part0008.xhtml#iddle1339">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Cunningham, Ward, <a class="indexterm" href="part0020.xhtml#iddle1340">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>D</h3><div class="variable_list_term">Decorator Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0010.xhtml#iddle1341">Meet the Decorator Pattern</a>, <a class="indexterm" href="part0010.xhtml#iddle1342">Give it a spin</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern vs., <a class="indexterm" href="part0014.xhtml#iddle1343">Writing the EnumerationIterator adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1344">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0010.xhtml#iddle1345">The Decorator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">disadvantages of, <a class="indexterm" href="part0010.xhtml#iddle1346">Decorating the java.io classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0018.xhtml#iddle1347">Running the code...</a>, <a class="indexterm" href="part0020.xhtml#iddle1348">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1349">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching pattern with its intent, <a class="indexterm" href="part0014.xhtml#iddle1350">And now for something different...</a>, <a class="indexterm" href="part0014.xhtml#iddle1351">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Java I/O, <a class="indexterm" href="part0010.xhtml#iddle1352">Real World Decorators: Java I/O</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Structural patterns category, <a class="indexterm" href="part0020.xhtml#iddle1353">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Proxy Pattern vs., <a class="indexterm" href="part0018.xhtml#iddle1354">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Starbuzz Coffee project</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0010.xhtml#iddle1355">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding sizes to code, <a class="indexterm" href="part0010.xhtml#iddle1356">Serving some coffees</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">constructing drink orders, <a class="indexterm" href="part0010.xhtml#iddle1357">Constructing a drink order with Decorators</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">decorating beverages in, <a class="indexterm" href="part0010.xhtml#iddle1358">Decorating our Beverages</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing beverage order process, <a class="indexterm" href="part0010.xhtml#iddle1359">New barista training</a>, <a class="indexterm" href="part0010.xhtml#iddle1360">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing order code, <a class="indexterm" href="part0010.xhtml#iddle1361">Serving some coffees</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Java decorators, <a class="indexterm" href="part0010.xhtml#iddle1362">Real World Decorators: Java I/O</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing code, <a class="indexterm" href="part0010.xhtml#iddle1363">Writing the Starbuzz code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">decoupling, Iterator allowing, <a class="indexterm" href="part0016.xhtml#iddle1364">What we have so far...</a>, <a class="indexterm" href="part0016.xhtml#iddle1365">What does this get us?</a>, <a class="indexterm" href="part0016.xhtml#iddle1366">Iterator Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1367">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">delegation, adding behavior at runtime, <a class="indexterm" href="part0010.xhtml#iddle1368">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dependence, in Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1369">The Observer Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle1370">The Dependency Inversion Principle</a>, <a class="indexterm" href="part0015.xhtml#iddle1371">The Hollywood Principle and Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dependency rot, <a class="indexterm" href="part0015.xhtml#iddle1372">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Design Patterns</div><blockquote class="variable_list_definition"><div class="variable_list_term">becoming writer of, <a class="indexterm" href="part0020.xhtml#iddle1373">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">behavioral patterns category, <a class="indexterm" href="part0020.xhtml#iddle1374">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle1375">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">categories of, <a class="indexterm" href="part0020.xhtml#iddle1376">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class patterns, <a class="indexterm" href="part0020.xhtml#iddle1377">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creational patterns category, <a class="indexterm" href="part0020.xhtml#iddle1378">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle1379">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0020.xhtml#iddle1380">Design Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">discovering own, <a class="indexterm" href="part0020.xhtml#iddle1381">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1382">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">frameworks vs., <a class="indexterm" href="part0008.xhtml#iddle1383">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">guide to better living with, <a class="indexterm" href="part0020.xhtml#iddle1384">Better Living with Patterns: Patterns in the Real World</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implement on interface in, <a class="indexterm" href="part0011.xhtml#iddle1385">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">libraries vs., <a class="indexterm" href="part0008.xhtml#iddle1386">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object patterns, <a class="indexterm" href="part0020.xhtml#iddle1387">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">organizing, <a class="indexterm" href="part0020.xhtml#iddle1388">Organizing Design Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">overusing, <a class="indexterm" href="part0020.xhtml#iddle1389">Your Mind on Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">resources for, <a class="indexterm" href="part0020.xhtml#iddle1390">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">rule of three applied to, <a class="indexterm" href="part0020.xhtml#iddle1391">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">structural patterns category, <a class="indexterm" href="part0020.xhtml#iddle1392">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle1393">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">thinking in patterns, <a class="indexterm" href="part0020.xhtml#iddle1394">Thinking in Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0008.xhtml#iddle1395">How do I use Design Patterns?</a>, <a class="indexterm" href="part0020.xhtml#iddle1396">If you don’t need it now, don’t do it now.</a>, <a class="indexterm" href="part0020.xhtml#iddle1397">Your Mind on Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">your mind on patterns, <a class="indexterm" href="part0020.xhtml#iddle1398">Your Mind on Patterns</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Design Patterns: Reusable Object-Oriented Software (Gamma et al.), <a class="indexterm" href="part0020.xhtml#iddle1399">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">design principles</div><blockquote class="variable_list_definition"><div class="variable_list_term">Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle1400">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing upon abstractions, <a class="indexterm" href="part0011.xhtml#iddle1401">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulate what varies, <a class="indexterm" href="part0008.xhtml#iddle1402">Zeroing in on the problem...</a>, <a class="indexterm" href="part0009.xhtml#iddle1403">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1404">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0011.xhtml#iddle1405">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">favor composition over inheritance, <a class="indexterm" href="part0008.xhtml#iddle1406">HAS-A can be better than IS-A</a>, <a class="indexterm" href="part0009.xhtml#iddle1407">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1408">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle1409">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">One Class, One Responsibility Principle, <a class="indexterm" href="part0012.xhtml#iddle1411">Congratulations!</a>, <a class="indexterm" href="part0016.xhtml#iddle1412">Single Responsibility</a>, <a class="indexterm" href="part0016.xhtml#iddle1413">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">one instance. (see Singleton Pattern)</div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Open-Closed Principle, <a class="indexterm" href="part0010.xhtml#iddle1415">The Open-Closed Principle</a>, <a class="indexterm" href="part0016.xhtml#iddle1416">Is the Waitress ready for prime time?</a>, <a class="indexterm" href="part0017.xhtml#iddle1417">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Principle of Least Knowledge, <a class="indexterm" href="part0014.xhtml#iddle1418">The Principle of Least Knowledge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">program to an interface, not an implementation, <a class="indexterm" href="part0008.xhtml#iddle1419">Designing the Duck Behaviors</a>, <a class="indexterm" href="part0009.xhtml#iddle1420">The dark side of java.util.Observable</a>, <a class="indexterm" href="part0009.xhtml#iddle1421">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1422">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0016.xhtml#iddle1423">What does this get us?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Single Responsibility Principle, <a class="indexterm" href="part0016.xhtml#iddle1424">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">strive for loosely coupled designs between objects that interact, <a class="indexterm" href="part0009.xhtml#iddle1425">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle, <a class="indexterm" href="part0015.xhtml#iddle1410">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1426">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1427">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Design Puzzles</div><blockquote class="variable_list_definition"><div class="variable_list_term">drawing class diagram making use of view and controller, <a class="indexterm" href="part0019.xhtml#iddle1428">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle1429">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing parallel set of classes, <a class="indexterm" href="part0011.xhtml#iddle1430">Another perspective: parallel class hierarchies</a>, <a class="indexterm" href="part0011.xhtml#iddle1431">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing state diagram, <a class="indexterm" href="part0017.xhtml#iddle1432">You knew it was coming... a change request!</a>, <a class="indexterm" href="part0017.xhtml#iddle1433">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">of classes and interfaces, <a class="indexterm" href="part0008.xhtml#iddle1434">Speaking of Design Patterns...</a>, <a class="indexterm" href="part0008.xhtml#iddle1435">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">redesigning classes to remove redundancy, <a class="indexterm" href="part0015.xhtml#iddle1436">It’s time for some more caffeine</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">redesigning Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle1437">Writing the Image Proxy</a>, <a class="indexterm" href="part0018.xhtml#iddle1438">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">dessert submenu, using Composite Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1439">Just when we thought it was safe...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0016.xhtml#iddle1440">Designing Menus with Composite</a>, <a class="indexterm" href="part0016.xhtml#iddle1441">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0016.xhtml#iddle1442">Implementing the Menu Component</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0016.xhtml#iddle1443">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Iterators in, <a class="indexterm" href="part0016.xhtml#iddle1444">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">diner menus, merging (Iterator Pattern)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1445">Breaking News: Objectville Diner and Objectville Pancake House Merge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterators, <a class="indexterm" href="part0016.xhtml#iddle1446">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code using java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1447">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating Iterator, <a class="indexterm" href="part0016.xhtml#iddle1448">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing Iterators for, <a class="indexterm" href="part0016.xhtml#iddle1449">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing of, <a class="indexterm" href="part0016.xhtml#iddle1450">Lou and Mel’s Menu implementations</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">DJ View, <a class="indexterm" href="part0019.xhtml#iddle1451">Using MVC to control the beat...</a>, <a class="indexterm" href="part0019.xhtml#iddle1452">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Domain-Specific Patterns, <a class="indexterm" href="part0020.xhtml#iddle1453">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">double-checked locking, reducing use of synchronization using, <a class="indexterm" href="part0012.xhtml#iddle1454">3. Use “double-checked locking” to reduce the use of synchronization in getInstance().</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Duck Magnets exercises, object and class object and class adapters, <a class="indexterm" href="part0014.xhtml#iddle1455">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">duck simulator, rebuilding</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1456">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle1457">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1458">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle1459">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1460">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1461">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1462">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1463">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0019.xhtml#iddle1464">A duck’s eye view: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">dumb command objects, <a class="indexterm" href="part0013.xhtml#iddle1465">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dynamic aspect of dynamic proxies, <a class="indexterm" href="part0018.xhtml#iddle1466">Running the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dynamic proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">creating, <a class="indexterm" href="part0018.xhtml#iddle1467">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using to create proxy implementation, <a class="indexterm" href="part0018.xhtml#iddle1468">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></div><div class="indexdiv"><h3>E</h3><div class="variable_list_term">encapsulate what varies, <a class="indexterm" href="part0008.xhtml#iddle1469">Zeroing in on the problem...</a>, <a class="indexterm" href="part0009.xhtml#iddle1470">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1471">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0011.xhtml#iddle1472">Factory Method Pattern defined</a>, <a class="indexterm" href="part0017.xhtml#iddle1473">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating algorithms</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle1474">The Template Method Pattern: Encapsulating Algorithms</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">abstracting prepareRecipe(), <a class="indexterm" href="part0015.xhtml#iddle1475">Abstracting prepareRecipe()</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating behavior, <a class="indexterm" href="part0008.xhtml#iddle1486">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating code</div><blockquote class="variable_list_definition"><div class="variable_list_term">in behaviors, <a class="indexterm" href="part0008.xhtml#iddle1487">The Big Picture on encapsulated behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in object creation, <a class="indexterm" href="part0011.xhtml#iddle1488">Encapsulating object creation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object creation, <a class="indexterm" href="part0011.xhtml#iddle1489">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Template Method Pattern and</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle1476">Meet the Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">applets in, <a class="indexterm" href="part0015.xhtml#iddle1477">Applets</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0015.xhtml#iddle1478">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle1479">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hooks in, <a class="indexterm" href="part0015.xhtml#iddle1481">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in real world, <a class="indexterm" href="part0015.xhtml#iddle1482">Template Methods in the Wild</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sorting with, <a class="indexterm" href="part0015.xhtml#iddle1483">Sorting with Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Swing and, <a class="indexterm" href="part0015.xhtml#iddle1484">Swingin’ with Frames</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0015.xhtml#iddle1485">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle and, <a class="indexterm" href="part0015.xhtml#iddle1480">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">encapsulating iteration, <a class="indexterm" href="part0016.xhtml#iddle1490">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating method invocation, <a class="indexterm" href="part0013.xhtml#iddle1491">The Command Pattern: Encapsulating Invocation</a>, <a class="indexterm" href="part0013.xhtml#iddle1492">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating object construction, <a class="indexterm" href="part0021.xhtml#iddle1493">Builder</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating requests, <a class="indexterm" href="part0013.xhtml#iddle1494">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating subsystem, Facades, <a class="indexterm" href="part0014.xhtml#iddle1495">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Enumeration</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1496">Real-world adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adapting to Iterator, <a class="indexterm" href="part0014.xhtml#iddle1497">Adapting an Enumeration to an Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">java.util.Enumeration as older implementation of Iterator, <a class="indexterm" href="part0014.xhtml#iddle1498">Real-world adapters</a>, <a class="indexterm" href="part0016.xhtml#iddle1499">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">remove() method and, <a class="indexterm" href="part0014.xhtml#iddle1500">Dealing with the remove() method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Adapter that adapts Iterator to, <a class="indexterm" href="part0014.xhtml#iddle1501">Writing the EnumerationIterator adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle1502">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">exercises</div><blockquote class="variable_list_definition"><div class="variable_list_term">Be the JVM solution, dealing with multithreading, <a class="indexterm" href="part0012.xhtml#iddle1503">Houston, Hershey, PA we have a problem...</a>, <a class="indexterm" href="part0012.xhtml#iddle1504">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Code Magnets</div><blockquote class="variable_list_definition"><div class="variable_list_term">for DinerMenu Iterator, <a class="indexterm" href="part0016.xhtml#iddle1505">Iterators and Collections</a>, <a class="indexterm" href="part0016.xhtml#iddle1506">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">for Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1507">Reworking the Weather Station with the built-in support</a>, <a class="indexterm" href="part0009.xhtml#iddle1508">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">dealing with multithreading, <a class="indexterm" href="part0014.xhtml#iddle1509">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Design Puzzles</div><blockquote class="variable_list_definition"><div class="variable_list_term">drawing class diagram making use of view and controller, <a class="indexterm" href="part0019.xhtml#iddle1510">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle1511">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing state diagram, <a class="indexterm" href="part0017.xhtml#iddle1512">You knew it was coming... a change request!</a>, <a class="indexterm" href="part0017.xhtml#iddle1513">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">of classes and interfaces, <a class="indexterm" href="part0008.xhtml#iddle1514">Speaking of Design Patterns...</a>, <a class="indexterm" href="part0008.xhtml#iddle1515">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">redesigning classes to remove redundancy, <a class="indexterm" href="part0015.xhtml#iddle1516">And now the Tea...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">redesigning Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle1517">Writing the Image Proxy</a>, <a class="indexterm" href="part0018.xhtml#iddle1518">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Duck Magnets exercises, object and class object and class adapters, <a class="indexterm" href="part0014.xhtml#iddle1519">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing Iterator, <a class="indexterm" href="part0016.xhtml#iddle1520">Reworking the Diner Menu with Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing undo button for macro command, <a class="indexterm" href="part0013.xhtml#iddle1521">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1522">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Sharpen Your Pencil</div><blockquote class="variable_list_definition"><div class="variable_list_term">altering decorator classes, <a class="indexterm" href="part0010.xhtml#iddle1523">Serving some coffees</a>, <a class="indexterm" href="part0010.xhtml#iddle1524">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating Gumball Machine states, <a class="indexterm" href="part0017.xhtml#iddle1525">Let’s take a look at what we’ve done so far...</a>, <a class="indexterm" href="part0017.xhtml#iddle1526">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating state diagram, <a class="indexterm" href="part0017.xhtml#iddle1527">Defining the State interfaces and classes</a>, <a class="indexterm" href="part0017.xhtml#iddle1528">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building ingredient factory, <a class="indexterm" href="part0011.xhtml#iddle1529">Building the New York ingredient factory</a>, <a class="indexterm" href="part0011.xhtml#iddle1530">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing classes for Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1531">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1532">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing code to fit framework in Iterator Pattern, <a class="indexterm" href="part0016.xhtml#iddle1533">Taking a look at the Café Menu</a>, <a class="indexterm" href="part0016.xhtml#iddle1534">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">choosing descriptions of state of implementation, <a class="indexterm" href="part0017.xhtml#iddle1535">The messy STATE of things...</a>, <a class="indexterm" href="part0017.xhtml#iddle1536">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram for implementation of prepareRecipe(), <a class="indexterm" href="part0015.xhtml#iddle1537">Abstracting prepareRecipe()</a>, <a class="indexterm" href="part0015.xhtml#iddle1538">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating commands for off buttons, <a class="indexterm" href="part0013.xhtml#iddle1539">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1540">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">determining classes violating Principle of Least Knowledge, <a class="indexterm" href="part0014.xhtml#iddle1541">Keeping your method calls in bounds...</a>, <a class="indexterm" href="part0014.xhtml#iddle1542">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing beverage order process, <a class="indexterm" href="part0010.xhtml#iddle1543">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">fixing Chocolate Boiler code, <a class="indexterm" href="part0012.xhtml#iddle1544">Meanwhile, back at the Chocolate Factory...</a>, <a class="indexterm" href="part0012.xhtml#iddle1545">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">identifying factors influencing design, <a class="indexterm" href="part0010.xhtml#iddle1546">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing garage door command, <a class="indexterm" href="part0013.xhtml#iddle1547">Creating a simple test to use the Remote Control</a>, <a class="indexterm" href="part0013.xhtml#iddle1548">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing state classes, <a class="indexterm" href="part0017.xhtml#iddle1549">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle1550">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching patterns with categories, <a class="indexterm" href="part0020.xhtml#iddle1551">Organizing Design Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">method for refilling gumball machine, <a class="indexterm" href="part0017.xhtml#iddle1552">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle1553">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on adding behaviors, <a class="indexterm" href="part0008.xhtml#iddle1554">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on implementation of printmenu(), <a class="indexterm" href="part0016.xhtml#iddle1555">The Java-Enabled Waitress Specification</a>, <a class="indexterm" href="part0016.xhtml#iddle1556">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on inheritance, <a class="indexterm" href="part0008.xhtml#iddle1557">Joe thinks about inheritance...</a>, <a class="indexterm" href="part0008.xhtml#iddle1558">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sketching out classes, <a class="indexterm" href="part0009.xhtml#iddle1559">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">things driving change, <a class="indexterm" href="part0008.xhtml#iddle1560">The one constant in software development</a>, <a class="indexterm" href="part0008.xhtml#iddle1561">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">turning class into Singleton, <a class="indexterm" href="part0012.xhtml#iddle1562">The Chocolate Factory</a>, <a class="indexterm" href="part0012.xhtml#iddle1563">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">weather station SWAG, <a class="indexterm" href="part0009.xhtml#iddle1564">Taking a first, misguided SWAG at the Weather Station</a>, <a class="indexterm" href="part0009.xhtml#iddle1565">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle1566">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1567">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing classes for adapters, <a class="indexterm" href="part0014.xhtml#iddle1568">Here’s how the Client uses the Adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle1569">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1570">Step two: creating the Proxy class and instantiating the Proxy object</a>, <a class="indexterm" href="part0018.xhtml#iddle1571">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Flock observer code, <a class="indexterm" href="part0019.xhtml#iddle1572">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1573">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing methods for classes, <a class="indexterm" href="part0010.xhtml#iddle1574">Welcome to Starbuzz Coffee</a>, <a class="indexterm" href="part0010.xhtml#iddle1575">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Who Does What</div><blockquote class="variable_list_definition"><div class="variable_list_term">matching objects and methods to Command Pattern, <a class="indexterm" href="part0013.xhtml#iddle1576">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle1577">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching pattern with description, <a class="indexterm" href="part0015.xhtml#iddle1580">The Hollywood Principle and Template Method</a>, <a class="indexterm" href="part0015.xhtml#iddle1581">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0016.xhtml#iddle1582">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle1583">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle1584">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle1585">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0018.xhtml#iddle1586">Running the code...</a>, <a class="indexterm" href="part0018.xhtml#iddle1587">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle1588">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1589">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching patterns with its intent, <a class="indexterm" href="part0014.xhtml#iddle1578">And now for something different...</a>, <a class="indexterm" href="part0014.xhtml#iddle1579">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">writing Adapter that adapts Iterator to Enumeration, <a class="indexterm" href="part0014.xhtml#iddle1590">Writing the EnumerationIterator adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle1591">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing handler for matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle1592">Creating Invocation Handlers continued...</a>, <a class="indexterm" href="part0018.xhtml#iddle1593">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">external iterators, <a class="indexterm" href="part0016.xhtml#iddle1594">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>F</h3><div class="variable_list_term">Facade Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1595">And now for something different...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern vs., <a class="indexterm" href="part0014.xhtml#iddle1596">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">advantages, <a class="indexterm" href="part0014.xhtml#iddle1597">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">benefits of, <a class="indexterm" href="part0014.xhtml#iddle1598">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building home theater system</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1599">Home Sweet Home Theater</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">constructing Facade in, <a class="indexterm" href="part0014.xhtml#iddle1600">Constructing your home theater facade</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing Facade class, <a class="indexterm" href="part0014.xhtml#iddle1601">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing interface, <a class="indexterm" href="part0014.xhtml#iddle1602">Implementing the simplified interface</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0014.xhtml#iddle1603">Time to watch a movie (the easy way)</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0014.xhtml#iddle1604">Facade Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Complexity Hiding Proxy vs., <a class="indexterm" href="part0018.xhtml#iddle1605">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0014.xhtml#iddle1606">Facade Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0016.xhtml#iddle1607">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle1608">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0018.xhtml#iddle1609">Running the code...</a>, <a class="indexterm" href="part0020.xhtml#iddle1610">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1611">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching pattern with its intent, <a class="indexterm" href="part0014.xhtml#iddle1612">And now for something different...</a>, <a class="indexterm" href="part0014.xhtml#iddle1613">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Principle of Least Knowledge and, <a class="indexterm" href="part0014.xhtml#iddle1614">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">factory method</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1615">Declaring a factory method</a>, <a class="indexterm" href="part0011.xhtml#iddle1616">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">as abstract, <a class="indexterm" href="part0011.xhtml#iddle1617">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">declaring, <a class="indexterm" href="part0011.xhtml#iddle1618">Declaring a factory method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">parallel class hierarchies and, <a class="indexterm" href="part0011.xhtml#iddle1619">Another perspective: parallel class hierarchies</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Factory Method Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1620">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">about factory objects, <a class="indexterm" href="part0011.xhtml#iddle1621">Encapsulating object creation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Abstract Factory Pattern and, <a class="indexterm" href="part0011.xhtml#iddle1622">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0011.xhtml#iddle1623">Reworking the pizzas, continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete classes and, <a class="indexterm" href="part0011.xhtml#iddle1624">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creator classes, <a class="indexterm" href="part0011.xhtml#iddle1625">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">declaring factory method, <a class="indexterm" href="part0011.xhtml#iddle1626">Declaring a factory method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle1627">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle1628">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing parallel set of classes, <a class="indexterm" href="part0011.xhtml#iddle1629">Another perspective: parallel class hierarchies</a>, <a class="indexterm" href="part0011.xhtml#iddle1630">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1631">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1632">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">looking at object dependencies, <a class="indexterm" href="part0011.xhtml#iddle1633">Looking at object dependencies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">parallel class hierarchies, <a class="indexterm" href="part0011.xhtml#iddle1634">Another perspective: parallel class hierarchies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">product classes, <a class="indexterm" href="part0011.xhtml#iddle1635">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Simple Factory and, <a class="indexterm" href="part0011.xhtml#iddle1636">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Factory Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">Abstract Factory</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1637">What have we done?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building ingredient factories, <a class="indexterm" href="part0011.xhtml#iddle1638">Building the ingredient factories</a>, <a class="indexterm" href="part0011.xhtml#iddle1639">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1640">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1641">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle1642">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1643">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1644">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method Pattern and, <a class="indexterm" href="part0011.xhtml#iddle1645">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0011.xhtml#iddle1646">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0015.xhtml#iddle1647">The Hollywood Principle and Template Method</a>, <a class="indexterm" href="part0015.xhtml#iddle1648">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0011.xhtml#iddle1649">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Abstract Factory and, <a class="indexterm" href="part0011.xhtml#iddle1650">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Abstract Factory in, <a class="indexterm" href="part0011.xhtml#iddle1651">What have we done?</a>, <a class="indexterm" href="part0011.xhtml#iddle1652">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">advantages of, <a class="indexterm" href="part0011.xhtml#iddle1653">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0011.xhtml#iddle1654">Reworking the pizzas, continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creator classes, <a class="indexterm" href="part0011.xhtml#iddle1655">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">declaring factory method, <a class="indexterm" href="part0011.xhtml#iddle1656">Declaring a factory method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle1657">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle1658">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing parallel set of classes, <a class="indexterm" href="part0011.xhtml#iddle1659">Another perspective: parallel class hierarchies</a>, <a class="indexterm" href="part0011.xhtml#iddle1660">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle1661">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1662">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">looking at object dependencies, <a class="indexterm" href="part0011.xhtml#iddle1663">Looking at object dependencies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">parallel class hierarchies, <a class="indexterm" href="part0011.xhtml#iddle1664">Another perspective: parallel class hierarchies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">product classes, <a class="indexterm" href="part0011.xhtml#iddle1665">It’s finally time to meet the Factory Method Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Simple Factory and, <a class="indexterm" href="part0011.xhtml#iddle1666">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Simple Factory</div><blockquote class="variable_list_definition"><div class="variable_list_term">about factory objects, <a class="indexterm" href="part0011.xhtml#iddle1667">Encapsulating object creation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building factory, <a class="indexterm" href="part0011.xhtml#iddle1668">Building a simple pizza factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle1669">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method Pattern and, <a class="indexterm" href="part0011.xhtml#iddle1670">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">pattern honorable mention, <a class="indexterm" href="part0011.xhtml#iddle1671">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using new operator for instantiating concrete classes, <a class="indexterm" href="part0011.xhtml#iddle1672">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">favor composition over inheritance, <a class="indexterm" href="part0008.xhtml#iddle1673">HAS-A can be better than IS-A</a>, <a class="indexterm" href="part0009.xhtml#iddle1674">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle1675">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle1676">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Firewall Proxy, <a class="indexterm" href="part0018.xhtml#iddle1677">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Flyweight Pattern, <a class="indexterm" href="part0021.xhtml#iddle1678">Flyweight</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">forces, <a class="indexterm" href="part0020.xhtml#iddle1679">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">frameworks vs. libraries, <a class="indexterm" href="part0008.xhtml#iddle1680">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>G</h3><div class="variable_list_term">Gamma, Erich, <a class="indexterm" href="part0020.xhtml#iddle1681">Cruisin’ Objectville with the Gang of Four</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Gang of Four (GoF)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0020.xhtml#iddle1682">Looking more closely at the Design Pattern definition</a>, <a class="indexterm" href="part0020.xhtml#iddle1683">Cruisin’ Objectville with the Gang of Four</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">catalogs, <a class="indexterm" href="part0020.xhtml#iddle1684">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">garbage collectors, <a class="indexterm" href="part0012.xhtml#iddle1685">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">global access point, <a class="indexterm" href="part0012.xhtml#iddle1686">Singleton Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">global variables vs. Singleton, <a class="indexterm" href="part0012.xhtml#iddle1687">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">guide to better living with Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle1688">Better Living with Patterns: Patterns in the Real World</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">gumball machine controller implementation, using State Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0017.xhtml#iddle1689">Jawva Breakers</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code, <a class="indexterm" href="part0017.xhtml#iddle1690">Sanity check...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">demonstration of, <a class="indexterm" href="part0017.xhtml#iddle1691">Demo for the CEO of Mighty Gumball, Inc.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">diagram to code, <a class="indexterm" href="part0017.xhtml#iddle1692">State machines 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">finishing, <a class="indexterm" href="part0017.xhtml#iddle1693">Finishing the game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">one in ten contest</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0017.xhtml#iddle1694">You knew it was coming... a change request!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating state diagram, <a class="indexterm" href="part0017.xhtml#iddle1695">Defining the State interfaces and classes</a>, <a class="indexterm" href="part0017.xhtml#iddle1696">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing code, <a class="indexterm" href="part0017.xhtml#iddle1697">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing state diagram, <a class="indexterm" href="part0017.xhtml#iddle1698">You knew it was coming... a change request!</a>, <a class="indexterm" href="part0017.xhtml#iddle1699">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing state classes, <a class="indexterm" href="part0017.xhtml#iddle1700">Implementing our State classes</a>, <a class="indexterm" href="part0017.xhtml#iddle1701">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle1702">We still need to finish the Gumball 1 in 10 game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">new design, <a class="indexterm" href="part0017.xhtml#iddle1703">The new design</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking state classes, <a class="indexterm" href="part0017.xhtml#iddle1704">Reworking the Gumball Machine</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">refilling gumball machine, <a class="indexterm" href="part0017.xhtml#iddle1705">We almost forgot!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">SoldState and WinnerState in, <a class="indexterm" href="part0017.xhtml#iddle1706">Demo for the CEO of Mighty Gumball, Inc.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0017.xhtml#iddle1707">In-house testing</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing code, <a class="indexterm" href="part0017.xhtml#iddle1708">Writing the code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">gumball machine monitoring, using Proxy Patterns</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1709">The Proxy Pattern: Controlling Object Access</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Remote Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1710">Testing the Monitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding to monitoring code, <a class="indexterm" href="part0018.xhtml#iddle1711">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">preparing for remote service, <a class="indexterm" href="part0018.xhtml#iddle1712">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle1713">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reusing client for, <a class="indexterm" href="part0018.xhtml#iddle1714">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1715">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">role of, <a class="indexterm" href="part0018.xhtml#iddle1716">The role of the ‘remote proxy’</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle1717">Writing the Monitor test drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects and, <a class="indexterm" href="part0018.xhtml#iddle1718">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote></div><div class="indexdiv"><h3>H</h3><div class="variable_list_term">HAS-A relationships</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0008.xhtml#iddle1719">HAS-A can be better than IS-A</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping components, <a class="indexterm" href="part0010.xhtml#iddle1720">The Decorator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">HashMap, <a class="indexterm" href="part0016.xhtml#iddle1721">Reworking the Café Menu code</a>, <a class="indexterm" href="part0016.xhtml#iddle1722">Iterators and Collections</a>, <a class="indexterm" href="part0016.xhtml#iddle1723">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hasNext() method</div><blockquote class="variable_list_definition"><div class="variable_list_term">in arrays, <a class="indexterm" href="part0016.xhtml#iddle1724">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1725">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Head First learning principles, <a class="indexterm" href="part0007.xhtml#iddle1726">And we know what your brain is thinking.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Head First Servlets &amp; JSP (Basham, Sierra and Bates), <a class="indexterm" href="part0019.xhtml#iddle1727">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Helm, Richard, <a class="indexterm" href="part0020.xhtml#iddle1728">Cruisin’ Objectville with the Gang of Four</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">high-level component classes, <a class="indexterm" href="part0011.xhtml#iddle1729">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hillside Group (website), <a class="indexterm" href="part0020.xhtml#iddle1730">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle, <a class="indexterm" href="part0015.xhtml#iddle1731">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">home automation remote control, using Command Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1732">Taking a look at the vendor classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building, <a class="indexterm" href="part0013.xhtml#iddle1733">Our first command object</a>, <a class="indexterm" href="part0013.xhtml#iddle1734">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0013.xhtml#iddle1735">The Command Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">command classes in</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1736">The Command Pattern means lots of command classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing method references, <a class="indexterm" href="part0013.xhtml#iddle1737">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using lambda expressions, <a class="indexterm" href="part0013.xhtml#iddle1738">Simplifying the Remote Control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">creating commands to be loaded, <a class="indexterm" href="part0013.xhtml#iddle1739">The Command Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">defining, <a class="indexterm" href="part0013.xhtml#iddle1740">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0013.xhtml#iddle1741">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">display of on and off slots, <a class="indexterm" href="part0013.xhtml#iddle1742">Check out the results of all those lambda expression commands...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0013.xhtml#iddle1743">Implementing the Commands</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">macro commands</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1744">Every remote needs a Party Mode!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hard coding vs., <a class="indexterm" href="part0013.xhtml#iddle1745">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">undo button, <a class="indexterm" href="part0013.xhtml#iddle1746">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1747">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0013.xhtml#iddle1748">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">mapping, <a class="indexterm" href="part0013.xhtml#iddle1749">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle1750">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Null Object, <a class="indexterm" href="part0013.xhtml#iddle1751">Now, let’s check out the execution of our remote control test...</a>, <a class="indexterm" href="part0013.xhtml#iddle1752">Test the remote control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0013.xhtml#iddle1753">Using the command object</a>, <a class="indexterm" href="part0013.xhtml#iddle1754">Putting the Remote Control through its paces</a>, <a class="indexterm" href="part0013.xhtml#iddle1755">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1756">Test the remote control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">undo commands</div><blockquote class="variable_list_definition"><div class="variable_list_term">creating, <a class="indexterm" href="part0013.xhtml#iddle1757">Time to write that documentation...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating multiple, <a class="indexterm" href="part0013.xhtml#iddle1758">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing for macro command, <a class="indexterm" href="part0013.xhtml#iddle1759">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0013.xhtml#iddle1760">Time to QA that Undo button!</a>, <a class="indexterm" href="part0013.xhtml#iddle1761">Get ready to test the ceiling fan</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using state to implement, <a class="indexterm" href="part0013.xhtml#iddle1762">Using state to implement Undo</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">vendor classes for, <a class="indexterm" href="part0013.xhtml#iddle1763">Taking a look at the vendor classes</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing documentation, <a class="indexterm" href="part0013.xhtml#iddle1764">Time to write that documentation...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">home theater system, building</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle1765">Home Sweet Home Theater</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">constructing Facade in, <a class="indexterm" href="part0014.xhtml#iddle1766">Constructing your home theater facade</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing interface, <a class="indexterm" href="part0014.xhtml#iddle1767">Implementing the simplified interface</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Sharpen Your Pencil, <a class="indexterm" href="part0014.xhtml#iddle1768">Keeping your method calls in bounds...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0014.xhtml#iddle1769">Time to watch a movie (the easy way)</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Facade Pattern, <a class="indexterm" href="part0014.xhtml#iddle1770">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">hooks, in Template Method Pattern, <a class="indexterm" href="part0015.xhtml#iddle1771">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>I</h3><div class="variable_list_term">Image Proxy, writing, <a class="indexterm" href="part0018.xhtml#iddle1772">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implement on interface, in design patterns, <a class="indexterm" href="part0011.xhtml#iddle1777">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Implementation section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1775">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementations</div><blockquote class="variable_list_definition"><div class="variable_list_term">coding to, <a class="indexterm" href="part0009.xhtml#iddle1773">What’s wrong with our implementation?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">programming, <a class="indexterm" href="part0008.xhtml#iddle1774">More integration...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">implementing behaviors, <a class="indexterm" href="part0008.xhtml#iddle1776">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">import and package statements, <a class="indexterm" href="part0011.xhtml#iddle1778">Our PizzaStore isn’t going to be very popular without some pizzas, so let’s implement them</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">inheritance</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0008.xhtml#iddle1779">Joe thinks about inheritance...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">composition vs., <a class="indexterm" href="part0010.xhtml#iddle1780">Cubicle Conversation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">disadvantages, <a class="indexterm" href="part0008.xhtml#iddle1781">Joe thinks about inheritance...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">disadvantages of, <a class="indexterm" href="part0010.xhtml#iddle1782">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">favoring composition over, <a class="indexterm" href="part0008.xhtml#iddle1783">HAS-A can be better than IS-A</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">for maintenance, <a class="indexterm" href="part0008.xhtml#iddle1784">But something went horribly wrong...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">for reuse, <a class="indexterm" href="part0008.xhtml#iddle1785">But something went horribly wrong...</a>, <a class="indexterm" href="part0008.xhtml#iddle1786">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing multiple, <a class="indexterm" href="part0014.xhtml#iddle1787">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">instance variables</div><blockquote class="variable_list_definition"><div class="variable_list_term">using instead of classes, <a class="indexterm" href="part0010.xhtml#iddle1788">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping to object, <a class="indexterm" href="part0010.xhtml#iddle1789">Coding condiments</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">instantiating concrete classes</div><blockquote class="variable_list_definition"><div class="variable_list_term">in objects, <a class="indexterm" href="part0011.xhtml#iddle1790">Looking at object dependencies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using new operator for, <a class="indexterm" href="part0011.xhtml#iddle1791">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">instantiating one object, <a class="indexterm" href="part0012.xhtml#iddle1792">The Singleton Pattern: One of a Kind Objects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">integrating behaviors, <a class="indexterm" href="part0008.xhtml#iddle1793">Integrating the Duck Behavior</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">integrating Cafe Menu, using Iterator Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1794">Taking a look at the Café Menu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking code, <a class="indexterm" href="part0016.xhtml#iddle1795">Reworking the Café Menu code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Intent section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1796">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">interface</div><blockquote class="variable_list_definition"><div class="variable_list_term">coding to, <a class="indexterm" href="part0011.xhtml#iddle1797">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">programming to, <a class="indexterm" href="part0008.xhtml#iddle1798">Designing the Duck Behaviors</a>, <a class="indexterm" href="part0009.xhtml#iddle1799">The dark side of java.util.Observable</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">interface type, <a class="indexterm" href="part0008.xhtml#iddle1800">Integrating the Duck Behavior</a>, <a class="indexterm" href="part0008.xhtml#iddle1801">Testing the Duck code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">internal iterators, <a class="indexterm" href="part0016.xhtml#iddle1802">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Interpreter Pattern, <a class="indexterm" href="part0021.xhtml#iddle1803">Interpreter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">inversion, in Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle1804">Applying the Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">invoker, <a class="indexterm" href="part0013.xhtml#iddle1805">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle1806">The Command Pattern defined</a>, <a class="indexterm" href="part0013.xhtml#iddle1807">Assigning Commands to slots</a>, <a class="indexterm" href="part0013.xhtml#iddle1808">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Iterator Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1809">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0016.xhtml#iddle1810">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close using HashMap, <a class="indexterm" href="part0016.xhtml#iddle1811">Reworking the Café Menu code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code violating Open-Closed Principle, <a class="indexterm" href="part0016.xhtml#iddle1812">Is the Waitress ready for prime time?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Collections and, <a class="indexterm" href="part0016.xhtml#iddle1813">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle1814">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern and, <a class="indexterm" href="part0016.xhtml#iddle1815">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0016.xhtml#iddle1816">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0016.xhtml#iddle1817">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle1818">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle1819">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle1820">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">integrating Cafe Menu</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1821">Taking a look at the Café Menu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking code, <a class="indexterm" href="part0016.xhtml#iddle1822">Reworking the Café Menu code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1823">Making some improvements...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">merging diner menus</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1824">Breaking News: Objectville Diner and Objectville Pancake House Merge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterators, <a class="indexterm" href="part0016.xhtml#iddle1825">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code using java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1826">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating Iterator, <a class="indexterm" href="part0016.xhtml#iddle1827">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing Iterators for, <a class="indexterm" href="part0016.xhtml#iddle1828">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing of, <a class="indexterm" href="part0016.xhtml#iddle1829">Lou and Mel’s Menu implementations</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Null Iterator, <a class="indexterm" href="part0016.xhtml#iddle1830">Flashback to Iterator</a>, <a class="indexterm" href="part0016.xhtml#iddle1831">The Null Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">removing objects, <a class="indexterm" href="part0016.xhtml#iddle1832">Making some improvements...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Single Responsibility Principle, <a class="indexterm" href="part0016.xhtml#iddle1833">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Iterators</div><blockquote class="variable_list_definition"><div class="variable_list_term">adding, <a class="indexterm" href="part0016.xhtml#iddle1834">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">allowing decoupling, <a class="indexterm" href="part0016.xhtml#iddle1835">What we have so far...</a>, <a class="indexterm" href="part0016.xhtml#iddle1836">What does this get us?</a>, <a class="indexterm" href="part0016.xhtml#iddle1837">Iterator Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1838">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code using java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1839">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Collections and, <a class="indexterm" href="part0016.xhtml#iddle1840">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating, <a class="indexterm" href="part0016.xhtml#iddle1841">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Enumeration adapting to, <a class="indexterm" href="part0014.xhtml#iddle1842">Adapting an Enumeration to an Iterator</a>, <a class="indexterm" href="part0016.xhtml#iddle1843">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">external, <a class="indexterm" href="part0016.xhtml#iddle1844">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">HashMap and, <a class="indexterm" href="part0016.xhtml#iddle1845">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0016.xhtml#iddle1846">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">internal and external, <a class="indexterm" href="part0016.xhtml#iddle1847">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ordering of, <a class="indexterm" href="part0016.xhtml#iddle1848">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">polymorphic code using, <a class="indexterm" href="part0016.xhtml#iddle1849">Iterator Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1850">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using ListInterator, <a class="indexterm" href="part0016.xhtml#iddle1851">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using with Composite Pattern, <a class="indexterm" href="part0016.xhtml#iddle1852">Flashback to Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Adapter for Enumeration, <a class="indexterm" href="part0014.xhtml#iddle1853">Dealing with the remove() method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Adapter that adapts to Enumeration, <a class="indexterm" href="part0014.xhtml#iddle1854">Writing the EnumerationIterator adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle1855">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></div><div class="indexdiv"><h3>J</h3><div class="variable_list_term">Java Collections Framework, <a class="indexterm" href="part0016.xhtml#iddle1856">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Java decorators (java.io packages), <a class="indexterm" href="part0010.xhtml#iddle1857">Real World Decorators: Java I/O</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Java Virtual Machines (JVMs)</div><blockquote class="variable_list_definition"><div class="variable_list_term">bug in garbage collector, <a class="indexterm" href="part0012.xhtml#iddle1868">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Remote Method Invocation (RMI), <a class="indexterm" href="part0018.xhtml#iddle1869">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">support of volatile keyword, <a class="indexterm" href="part0012.xhtml#iddle1870">3. Use “double-checked locking” to reduce the use of synchronization in getInstance().</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">java.lang.reflect package, proxy support in, <a class="indexterm" href="part0018.xhtml#iddle1858">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle1859">Using the Java API’s Proxy to create a protection proxy</a>, <a class="indexterm" href="part0018.xhtml#iddle1860">Creating Invocation Handlers continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">java.util, built-in Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle1861">Using Java’s built-in Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">java.util.Collection, <a class="indexterm" href="part0016.xhtml#iddle1862">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">java.util.Enumeration, as older implementation of Iterator, <a class="indexterm" href="part0014.xhtml#iddle1863">Real-world adapters</a>, <a class="indexterm" href="part0016.xhtml#iddle1864">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">java.util.Iterator</div><blockquote class="variable_list_definition"><div class="variable_list_term">cleaning up code using, <a class="indexterm" href="part0016.xhtml#iddle1865">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">interface of, <a class="indexterm" href="part0016.xhtml#iddle1866">Making some improvements...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0016.xhtml#iddle1867">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">JButton, in Swing API, <a class="indexterm" href="part0009.xhtml#iddle1871">Other places you’ll find the Observer Pattern in the JDK</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">JFrames, Swing, <a class="indexterm" href="part0015.xhtml#iddle1872">Swingin’ with Frames</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Johnson, Ralph, <a class="indexterm" href="part0020.xhtml#iddle1873">Cruisin’ Objectville with the Gang of Four</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>K</h3><div class="variable_list_term">Kathy Sierra, (Head First Servlets &amp; JSP), <a class="indexterm" href="part0019.xhtml#iddle1874">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">KISS (Keep It Simple), in designing patterns, <a class="indexterm" href="part0020.xhtml#iddle1875">Thinking in Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Known Uses section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1876">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>L</h3><div class="variable_list_term">lambda expressions, <a class="indexterm" href="part0009.xhtml#iddle1877">And the code...</a>, <a class="indexterm" href="part0013.xhtml#iddle1878">Simplifying the Remote Control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Law of Demeter, <a class="indexterm" href="part0014.xhtml#iddle1879">Keeping your method calls in bounds...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">lazy instantiation, <a class="indexterm" href="part0012.xhtml#iddle1880">Singleton Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">leaves, in Composite Pattern tree structure, <a class="indexterm" href="part0016.xhtml#iddle1881">The Composite Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1882">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">libraries</div><blockquote class="variable_list_definition"><div class="variable_list_term">design patterns vs., <a class="indexterm" href="part0008.xhtml#iddle1883">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">frameworks vs., <a class="indexterm" href="part0008.xhtml#iddle1884">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">LinkedList, <a class="indexterm" href="part0016.xhtml#iddle1885">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ListInterator, <a class="indexterm" href="part0016.xhtml#iddle1886">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">logging requests, using Command Pattern, <a class="indexterm" href="part0013.xhtml#iddle1887">More uses of the Command Pattern: logging requests</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">looping through array items, <a class="indexterm" href="part0016.xhtml#iddle1888">The Java-Enabled Waitress Specification</a>, <a class="indexterm" href="part0016.xhtml#iddle1889">What now?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">loose coupling, <a class="indexterm" href="part0009.xhtml#iddle1890">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>M</h3><div class="variable_list_term">macro commands</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0013.xhtml#iddle1891">Every remote needs a Party Mode!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">macro commands</div><blockquote class="variable_list_definition"><div class="variable_list_term">hard coding vs., <a class="indexterm" href="part0013.xhtml#iddle1892">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">undo button, <a class="indexterm" href="part0013.xhtml#iddle1893">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle1894">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0013.xhtml#iddle1895">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">magic bullet, Design Patterns as not, <a class="indexterm" href="part0020.xhtml#iddle1896">Thinking in Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">maintenance, inheritance for, <a class="indexterm" href="part0008.xhtml#iddle1897">But something went horribly wrong...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matchmaking service, using Proxy Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1898">Matchmaking in Objectville</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1899">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0018.xhtml#iddle1900">The PersonBean implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">protecting subjects, <a class="indexterm" href="part0018.xhtml#iddle1901">Five-minute drama: protecting subjects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle1902">Testing the matchmaking service</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Mediator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1903">Composite</a>, <a class="indexterm" href="part0021.xhtml#iddle1904">Mediator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Memento Pattern, <a class="indexterm" href="part0021.xhtml#iddle1905">Memento</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">merging diner menus (Iterator Pattern)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0016.xhtml#iddle1906">Breaking News: Objectville Diner and Objectville Pancake House Merge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterators, <a class="indexterm" href="part0016.xhtml#iddle1907">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code using java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1908">Cleaning things up with java.util.Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating Iterator, <a class="indexterm" href="part0016.xhtml#iddle1909">Can we encapsulate the iteration?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing Iterators for, <a class="indexterm" href="part0016.xhtml#iddle1910">Meet the Iterator Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing of, <a class="indexterm" href="part0016.xhtml#iddle1911">Lou and Mel’s Menu implementations</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">method of objects, components of object vs., <a class="indexterm" href="part0014.xhtml#iddle1912">The Principle of Least Knowledge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">method references, passing, <a class="indexterm" href="part0013.xhtml#iddle1913">Simplifying even more with method references</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">methods</div><blockquote class="variable_list_definition"><div class="variable_list_term">as hooks, <a class="indexterm" href="part0015.xhtml#iddle1914">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">overriding from implemented, <a class="indexterm" href="part0011.xhtml#iddle1915">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Model 2</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1916">MVC and the Web</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1917">Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">from cell phone, <a class="indexterm" href="part0019.xhtml#iddle1918">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1919">Design Patterns and Model 2</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern, <a class="indexterm" href="part0019.xhtml#iddle1920">Strategy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Model-View-Controller (MVC)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1922">If Elvis were a compound pattern, his name would be Model-View-Controller, and he’d be singing a little song like this...</a>, <a class="indexterm" href="part0019.xhtml#iddle1923">Meet the Model-View-Controller</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle1924">Adapting the Model</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Beat model, <a class="indexterm" href="part0019.xhtml#iddle1925">Meet the Java DJ View</a>, <a class="indexterm" href="part0019.xhtml#iddle1926">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1927">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1928">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">controllers per view, <a class="indexterm" href="part0019.xhtml#iddle1929">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Heart controller, <a class="indexterm" href="part0019.xhtml#iddle1930">Now we’re ready for a HeartController</a>, <a class="indexterm" href="part0019.xhtml#iddle1931">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Heart model, <a class="indexterm" href="part0019.xhtml#iddle1932">Exploring Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing controller, <a class="indexterm" href="part0019.xhtml#iddle1933">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle1934">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing DJ View, <a class="indexterm" href="part0019.xhtml#iddle1935">Using MVC to control the beat...</a>, <a class="indexterm" href="part0019.xhtml#iddle1936">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Mediator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1937">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">model in, <a class="indexterm" href="part0019.xhtml#iddle1938">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1939">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1940">Building the pieces</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">song, <a class="indexterm" href="part0019.xhtml#iddle1941">If Elvis were a compound pattern, his name would be Model-View-Controller, and he’d be singing a little song like this...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state of model, <a class="indexterm" href="part0019.xhtml#iddle1942">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern, <a class="indexterm" href="part0019.xhtml#iddle1943">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle1944">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle1945">Exploring Strategy</a>, <a class="indexterm" href="part0019.xhtml#iddle1946">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0019.xhtml#iddle1947">Putting it all together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">views accessing model state methods, <a class="indexterm" href="part0019.xhtml#iddle1948">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">web and, <a class="indexterm" href="part0019.xhtml#iddle1949">MVC and the Web</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">modeling state, <a class="indexterm" href="part0017.xhtml#iddle1921">State machines 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Motivation section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1950">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">multiple patterns, using</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle1951">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in duck simulator</div><blockquote class="variable_list_definition"><div class="variable_list_term">about rebuilding, <a class="indexterm" href="part0019.xhtml#iddle1952">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle1953">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle1954">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle1955">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle1956">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1957">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterator Pattern, <a class="indexterm" href="part0019.xhtml#iddle1958">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle1959">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0019.xhtml#iddle1960">A duck’s eye view: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">multithreading</div><blockquote class="variable_list_definition"><div class="variable_list_term">dealing with, <a class="indexterm" href="part0012.xhtml#iddle1961">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">improving, <a class="indexterm" href="part0012.xhtml#iddle1962">Can we improve multithreading?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></div><div class="indexdiv"><h3>N</h3><div class="variable_list_term">Name section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle1963">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">new operator, replacing with concrete method, <a class="indexterm" href="part0011.xhtml#iddle1964">Reworking the PizzaStore class</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">next() method</div><blockquote class="variable_list_definition"><div class="variable_list_term">in java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle1965">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">with Iterator, arrays, <a class="indexterm" href="part0016.xhtml#iddle1966">Adding an Iterator to DinerMenu</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">NoCommand, in remote control code, <a class="indexterm" href="part0013.xhtml#iddle1967">Now, let’s check out the execution of our remote control test...</a>, <a class="indexterm" href="part0013.xhtml#iddle1968">Test the remote control with lambda expressions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">nodes, in Composite Pattern tree structure, <a class="indexterm" href="part0016.xhtml#iddle1969">The Composite Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle1970">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Null Iterator, <a class="indexterm" href="part0016.xhtml#iddle1971">Flashback to Iterator</a>, <a class="indexterm" href="part0016.xhtml#iddle1972">The Null Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Null Objects, <a class="indexterm" href="part0013.xhtml#iddle1973">Now, let’s check out the execution of our remote control test...</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>O</h3><div class="variable_list_term">object access, using Proxy Pattern for controlling</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1974">The Proxy Pattern: Controlling Object Access</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Caching Proxy, <a class="indexterm" href="part0018.xhtml#iddle1975">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle1976">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Complexity Hiding Proxy, <a class="indexterm" href="part0018.xhtml#iddle1977">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Copy-On-Write Proxy, <a class="indexterm" href="part0018.xhtml#iddle1978">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Firewall Proxy, <a class="indexterm" href="part0018.xhtml#iddle1979">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Protection Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1980">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1981">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle1982">The PersonBean implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">protecting subjects, <a class="indexterm" href="part0018.xhtml#iddle1983">Five-minute drama: protecting subjects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle1984">Testing the matchmaking service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle1985">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Remote Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1986">Testing the Monitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding to monitoring code, <a class="indexterm" href="part0018.xhtml#iddle1987">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">preparing for remote service, <a class="indexterm" href="part0018.xhtml#iddle1988">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle1989">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reusing client for, <a class="indexterm" href="part0018.xhtml#iddle1990">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1991">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">role of, <a class="indexterm" href="part0018.xhtml#iddle1992">The role of the ‘remote proxy’</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle1993">Writing the Monitor test drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects and, <a class="indexterm" href="part0018.xhtml#iddle1994">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Smart Reference Proxy, <a class="indexterm" href="part0018.xhtml#iddle1995">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Synchronization Proxy, <a class="indexterm" href="part0018.xhtml#iddle1996">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Virtual Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle1997">Get ready for Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle1998">Designing the CD cover Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle1999">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle2000">Testing the CD Cover Viewer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle2001">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">object adapters vs. class adapters, <a class="indexterm" href="part0014.xhtml#iddle2002">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object construction, encapsulating, <a class="indexterm" href="part0021.xhtml#iddle2003">Builder</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object creation, encapsulating, <a class="indexterm" href="part0011.xhtml#iddle2004">Encapsulating object creation</a>, <a class="indexterm" href="part0011.xhtml#iddle2005">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object patterns, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2017">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Object-Oriented (OO) design., <a class="indexterm" href="part0011.xhtml#iddle2006">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"><div class="variable_list_term">(see also design principles)</div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adapters</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle2007">Adapters all around us</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating Two Way Adapters, <a class="indexterm" href="part0014.xhtml#iddle2008">Here’s how the Client uses the Adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in action, <a class="indexterm" href="part0014.xhtml#iddle2009">If it walks like a duck and quacks like a duck, then it must might be a duck turkey wrapped with a duck adapter...</a>, <a class="indexterm" href="part0014.xhtml#iddle2010">Test drive the adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object and class object and class, <a class="indexterm" href="part0014.xhtml#iddle2011">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">design patterns vs., <a class="indexterm" href="part0008.xhtml#iddle2012">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">extensibility and modification of code in, <a class="indexterm" href="part0010.xhtml#iddle2013">The Open-Closed Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">guidelines for avoiding violation of Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle2014">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">loosely coupled designs and, <a class="indexterm" href="part0009.xhtml#iddle2015">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Object-Oriented Systems, Languages and Applications (OOPSLA) conference, <a class="indexterm" href="part0020.xhtml#iddle2016">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">objects</div><blockquote class="variable_list_definition"><div class="variable_list_term">components of, <a class="indexterm" href="part0014.xhtml#iddle2018">The Principle of Least Knowledge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating, <a class="indexterm" href="part0011.xhtml#iddle2019">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">loosely coupled designs between, <a class="indexterm" href="part0009.xhtml#iddle2020">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sharing state, <a class="indexterm" href="part0017.xhtml#iddle2021">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Singleton, <a class="indexterm" href="part0012.xhtml#iddle2022">A small Socratic exercise in the style of The Little Lisper</a>, <a class="indexterm" href="part0012.xhtml#iddle2023">Dissecting the classic Singleton Pattern implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping, <a class="indexterm" href="part0010.xhtml#iddle2024">Meet the Decorator Pattern</a>, <a class="indexterm" href="part0014.xhtml#iddle2025">Here’s how the Client uses the Adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle2026">Writing the EnumerationIterator adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle2027">Lights, Camera, Facade!</a>, <a class="indexterm" href="part0019.xhtml#iddle2028">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Observer Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0009.xhtml#iddle2029">The Observer Pattern: Keeping your Objects in the know</a>, <a class="indexterm" href="part0009.xhtml#iddle2030">Meet the Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class design of, <a class="indexterm" href="part0009.xhtml#iddle2031">The Observer Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class patterns category, <a class="indexterm" href="part0020.xhtml#iddle2032">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">combining patterns, <a class="indexterm" href="part0019.xhtml#iddle2033">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0009.xhtml#iddle2034">The Observer Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dependence in, <a class="indexterm" href="part0009.xhtml#iddle2035">The Observer Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0016.xhtml#iddle2036">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle2037">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle2038">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Five Minute Drama, <a class="indexterm" href="part0009.xhtml#iddle2039">Five-minute drama: a subject for observation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model 2, <a class="indexterm" href="part0019.xhtml#iddle2040">Design Patterns and Model 2</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model-View-Controller, <a class="indexterm" href="part0019.xhtml#iddle2041">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle2042">Building the pieces</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">lambada expressions and, <a class="indexterm" href="part0009.xhtml#iddle2043">And the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">loose coupling in, <a class="indexterm" href="part0009.xhtml#iddle2044">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer object in, <a class="indexterm" href="part0009.xhtml#iddle2045">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">one-to-many relationships, <a class="indexterm" href="part0009.xhtml#iddle2046">The Observer Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">process, <a class="indexterm" href="part0009.xhtml#iddle2047">A day in the life of the Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Publish-Subscribe as, <a class="indexterm" href="part0009.xhtml#iddle2048">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Subject object in, <a class="indexterm" href="part0009.xhtml#iddle2049">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Swing and, <a class="indexterm" href="part0009.xhtml#iddle2050">Other places you’ll find the Observer Pattern in the JDK</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using built-in java.util, <a class="indexterm" href="part0009.xhtml#iddle2051">Using Java’s built-in Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">weather station using</div><blockquote class="variable_list_definition"><div class="variable_list_term">building display elements, <a class="indexterm" href="part0009.xhtml#iddle2052">Now, let’s build those display elements</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0009.xhtml#iddle2053">Designing the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0009.xhtml#iddle2054">Implementing the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">powering up, <a class="indexterm" href="part0009.xhtml#iddle2055">Power up the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">SWAG, <a class="indexterm" href="part0009.xhtml#iddle2056">Taking a first, misguided SWAG at the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">unpacking classes, <a class="indexterm" href="part0009.xhtml#iddle2057">Unpacking the WeatherData class</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using built-in Java Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle2058">Reworking the Weather Station with the built-in support</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">observers</div><blockquote class="variable_list_definition"><div class="variable_list_term">in class diagram, <a class="indexterm" href="part0009.xhtml#iddle2059">The Observer Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Five Minute Drama, <a class="indexterm" href="part0009.xhtml#iddle2060">Five-minute drama: a subject for observation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle2061">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">One Class, One Responsibility Principle, <a class="indexterm" href="part0012.xhtml#iddle2062">Congratulations!</a>, <a class="indexterm" href="part0016.xhtml#iddle2063">Single Responsibility</a>, <a class="indexterm" href="part0016.xhtml#iddle2064">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">one in ten contest in gumball machine, using State Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0017.xhtml#iddle2065">You knew it was coming... a change request!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating state diagram, <a class="indexterm" href="part0017.xhtml#iddle2066">Defining the State interfaces and classes</a>, <a class="indexterm" href="part0017.xhtml#iddle2067">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing code, <a class="indexterm" href="part0017.xhtml#iddle2068">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing state diagram, <a class="indexterm" href="part0017.xhtml#iddle2069">You knew it was coming... a change request!</a>, <a class="indexterm" href="part0017.xhtml#iddle2070">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing state classes, <a class="indexterm" href="part0017.xhtml#iddle2071">Implementing our State classes</a>, <a class="indexterm" href="part0017.xhtml#iddle2072">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle2073">We still need to finish the Gumball 1 in 10 game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">new design, <a class="indexterm" href="part0017.xhtml#iddle2074">The new design</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking state classes, <a class="indexterm" href="part0017.xhtml#iddle2075">Reworking the Gumball Machine</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">one-to-many relationships, Observer Pattern defining, <a class="indexterm" href="part0009.xhtml#iddle2076">The Observer Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">OO (Object-Oriented) design., <a class="indexterm" href="part0011.xhtml#iddle2077">The Dependency Inversion Principle</a></div><blockquote class="variable_list_definition"><div class="variable_list_term">(see also design principles)</div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adapters</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0014.xhtml#iddle2078">Adapters all around us</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating Two Way Adapters, <a class="indexterm" href="part0014.xhtml#iddle2079">Here’s how the Client uses the Adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in action, <a class="indexterm" href="part0014.xhtml#iddle2080">If it walks like a duck and quacks like a duck, then it must might be a duck turkey wrapped with a duck adapter...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">object and class object and class, <a class="indexterm" href="part0014.xhtml#iddle2081">Object and class adapters</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">test driving, <a class="indexterm" href="part0014.xhtml#iddle2082">Test drive the adapter</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">design patterns vs., <a class="indexterm" href="part0008.xhtml#iddle2083">How do I use Design Patterns?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">extensibility and modification os code in, <a class="indexterm" href="part0010.xhtml#iddle2084">The Open-Closed Principle</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">guidelines for avoiding violation of Dependency Inversion Principle, <a class="indexterm" href="part0011.xhtml#iddle2085">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">loosely coupled designs and, <a class="indexterm" href="part0009.xhtml#iddle2086">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">OOPSLA (Object-Oriented Systems, Languages and Applications) conference, <a class="indexterm" href="part0020.xhtml#iddle2087">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Open-Closed Principle</div><blockquote class="variable_list_definition"><div class="variable_list_term">code violating, <a class="indexterm" href="part0016.xhtml#iddle2088">Is the Waitress ready for prime time?</a>, <a class="indexterm" href="part0017.xhtml#iddle2089">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">effect on maintaining code, <a class="indexterm" href="part0010.xhtml#iddle2090">The Open-Closed Principle</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Organizational Patterns, <a class="indexterm" href="part0020.xhtml#iddle2091">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">overusing Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2092">Your Mind on Patterns</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>P</h3><div class="variable_list_term">package and import statements, <a class="indexterm" href="part0011.xhtml#iddle2093">Our PizzaStore isn’t going to be very popular without some pizzas, so let’s implement them</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">parallel class hierarchies, <a class="indexterm" href="part0011.xhtml#iddle2094">Another perspective: parallel class hierarchies</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">part-whole hierarchy, <a class="indexterm" href="part0016.xhtml#iddle2096">The Composite Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Participants section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle2095">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">pattern catalogs, <a class="indexterm" href="part0020.xhtml#iddle2097">Looking more closely at the Design Pattern definition</a>, <a class="indexterm" href="part0020.xhtml#iddle2098">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Pattern Death Match pages, <a class="indexterm" href="part0019.xhtml#iddle2099">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Pattern Languages of Programs (PLoP) conference, <a class="indexterm" href="part0020.xhtml#iddle2101">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">pattern templates, uses of, <a class="indexterm" href="part0020.xhtml#iddle2113">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">A Pattern Language (Alexander), <a class="indexterm" href="part0020.xhtml#iddle2100">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">patterns, using compound, <a class="indexterm" href="part0019.xhtml#iddle2102">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">patterns, using multiple</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0019.xhtml#iddle2103">Compound Patterns: Patterns of Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in duck simulator</div><blockquote class="variable_list_definition"><div class="variable_list_term">about rebuilding, <a class="indexterm" href="part0019.xhtml#iddle2104">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle2105">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle2106">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Adapter Pattern, <a class="indexterm" href="part0019.xhtml#iddle2107">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Composite Pattern, <a class="indexterm" href="part0019.xhtml#iddle2108">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle2109">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Iterator Pattern, <a class="indexterm" href="part0019.xhtml#iddle2110">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding Observer Pattern, <a class="indexterm" href="part0019.xhtml#iddle2111">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0019.xhtml#iddle2112">A duck’s eye view: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">Pizza Store project, using Factory Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">Abstract Factory in, <a class="indexterm" href="part0011.xhtml#iddle2114">What have we done?</a>, <a class="indexterm" href="part0011.xhtml#iddle2115">Abstract Factory Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">behind the scenes, <a class="indexterm" href="part0011.xhtml#iddle2116">More pizza for Ethan and Joel...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building factory, <a class="indexterm" href="part0011.xhtml#iddle2117">Building a simple pizza factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete subclasses in, <a class="indexterm" href="part0011.xhtml#iddle2118">Allowing the subclasses to decide</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing parallel set of classes, <a class="indexterm" href="part0011.xhtml#iddle2119">Another perspective: parallel class hierarchies</a>, <a class="indexterm" href="part0011.xhtml#iddle2120">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">encapsulating object creation, <a class="indexterm" href="part0011.xhtml#iddle2121">Encapsulating object creation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ensuring consistency in ingredients, <a class="indexterm" href="part0011.xhtml#iddle2122">Meanwhile, back at the PizzaStore...</a>, <a class="indexterm" href="part0011.xhtml#iddle2123">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">framework for, <a class="indexterm" href="part0011.xhtml#iddle2124">A framework for the pizza store</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">franchising store, <a class="indexterm" href="part0011.xhtml#iddle2125">Franchising the pizza store</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">identifying aspects in, <a class="indexterm" href="part0011.xhtml#iddle2126">Identifying the aspects that vary</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0011.xhtml#iddle2127">Inverting your thinking...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making pizza store in, <a class="indexterm" href="part0011.xhtml#iddle2128">Let’s make a PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">ordering pizza, <a class="indexterm" href="part0011.xhtml#iddle2129">Our PizzaStore isn’t going to be very popular without some pizzas, so let’s implement them</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">referencing local ingredient factories, <a class="indexterm" href="part0011.xhtml#iddle2130">Revisiting our pizza stores</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking pizzas, <a class="indexterm" href="part0011.xhtml#iddle2131">Reworking the pizzas...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">PLoP (Pattern Languages of Programs) conference, <a class="indexterm" href="part0020.xhtml#iddle2132">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">polymorphic code, using on iterator, <a class="indexterm" href="part0016.xhtml#iddle2133">Iterator Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle2134">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">polymorphism, <a class="indexterm" href="part0008.xhtml#iddle2135">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">prepareRecipe(), abstracting, <a class="indexterm" href="part0015.xhtml#iddle2136">Abstracting prepareRecipe()</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Principle of Least Knowledge, <a class="indexterm" href="part0014.xhtml#iddle2137">The Principle of Least Knowledge</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">print() method, in dessert submenu using Composite Pattern, <a class="indexterm" href="part0016.xhtml#iddle2138">Implementing the Menu Component</a>, <a class="indexterm" href="part0016.xhtml#iddle2139">The Composite Iterator</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">program to an interface, not an implementation, <a class="indexterm" href="part0008.xhtml#iddle2140">Designing the Duck Behaviors</a>, <a class="indexterm" href="part0009.xhtml#iddle2141">The dark side of java.util.Observable</a>, <a class="indexterm" href="part0009.xhtml#iddle2142">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0009.xhtml#iddle2143">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0016.xhtml#iddle2144">What does this get us?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">program to interface vs. program to supertype, <a class="indexterm" href="part0008.xhtml#iddle2145">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Protection Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2146">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle2147">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle2148">The PersonBean implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">protecting subjects, <a class="indexterm" href="part0018.xhtml#iddle2149">Five-minute drama: protecting subjects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Proxy Pattern and, <a class="indexterm" href="part0018.xhtml#iddle2150">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle2151">Testing the matchmaking service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle2152">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Prototype Pattern, <a class="indexterm" href="part0021.xhtml#iddle2153">Prototype</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">proxies, <a class="indexterm" href="part0018.xhtml#iddle2154">The Proxy Pattern: Controlling Object Access</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Proxy class, identifying class as, <a class="indexterm" href="part0018.xhtml#iddle2155">Running the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Proxy Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">Adapter Pattern vs., <a class="indexterm" href="part0018.xhtml#iddle2156">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Complexity Hiding Proxy, <a class="indexterm" href="part0018.xhtml#iddle2157">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Copy-On-Write Proxy, <a class="indexterm" href="part0018.xhtml#iddle2158">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Decorator Pattern vs., <a class="indexterm" href="part0018.xhtml#iddle2159">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0018.xhtml#iddle2160">The Proxy Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dynamic aspect of dynamic proxies, <a class="indexterm" href="part0018.xhtml#iddle2161">Running the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0018.xhtml#iddle2162">Running the code...</a>, <a class="indexterm" href="part0020.xhtml#iddle2163">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle2164">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Firewall Proxy, <a class="indexterm" href="part0018.xhtml#iddle2165">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementation of Remote Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2166">Testing the Monitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding to monitoring code, <a class="indexterm" href="part0018.xhtml#iddle2167">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">preparing for remote service, <a class="indexterm" href="part0018.xhtml#iddle2168">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle2169">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reusing client for, <a class="indexterm" href="part0018.xhtml#iddle2170">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle2171">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">role of, <a class="indexterm" href="part0018.xhtml#iddle2172">The role of the ‘remote proxy’</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle2173">Writing the Monitor test drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects and, <a class="indexterm" href="part0018.xhtml#iddle2174">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">java.lang.reflect package, <a class="indexterm" href="part0018.xhtml#iddle2175">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2176">Using the Java API’s Proxy to create a protection proxy</a>, <a class="indexterm" href="part0018.xhtml#iddle2177">Creating Invocation Handlers continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Protection Proxy and</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2178">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Adapters and, <a class="indexterm" href="part0018.xhtml#iddle2179">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle2180">Big Picture: creating a Dynamic Proxy for the PersonBean</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle2181">The PersonBean implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">protecting subjects, <a class="indexterm" href="part0018.xhtml#iddle2182">Five-minute drama: protecting subjects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing matchmaking service, <a class="indexterm" href="part0018.xhtml#iddle2183">Testing the matchmaking service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle2184">Using the Java API’s Proxy to create a protection proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Real Subject</div><blockquote class="variable_list_definition"><div class="variable_list_term">as surrogate of, <a class="indexterm" href="part0018.xhtml#iddle2185">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">invoking method on, <a class="indexterm" href="part0018.xhtml#iddle2186">Step one: creating Invocation Handlers</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making client use Proxy instead of, <a class="indexterm" href="part0018.xhtml#iddle2187">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing in constructor, <a class="indexterm" href="part0018.xhtml#iddle2188">Creating Invocation Handlers continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">returning proxy for, <a class="indexterm" href="part0018.xhtml#iddle2189">Step two: creating the Proxy class and instantiating the Proxy object</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">restrictions on passing types of interfaces, <a class="indexterm" href="part0018.xhtml#iddle2190">Running the code...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Smart Reference Proxy, <a class="indexterm" href="part0018.xhtml#iddle2191">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Synchronization Proxy, <a class="indexterm" href="part0018.xhtml#iddle2192">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">variations, <a class="indexterm" href="part0018.xhtml#iddle2193">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle2194">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Virtual Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2195">Get ready for Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Caching Proxy as form of, <a class="indexterm" href="part0018.xhtml#iddle2196">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle2197">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle2198">Designing the CD cover Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle2199">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle2200">Testing the CD Cover Viewer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle2201">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">Publish-Subscribe, as Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle2202">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>Q</h3><div class="variable_list_term">queuing requests, using Command Pattern, <a class="indexterm" href="part0013.xhtml#iddle2203">More uses of the Command Pattern: queuing requests</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>R</h3><div class="variable_list_term">Real Subject</div><blockquote class="variable_list_definition"><div class="variable_list_term">as surrogate of Proxy Pattern, <a class="indexterm" href="part0018.xhtml#iddle2204">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">invoking method on, <a class="indexterm" href="part0018.xhtml#iddle2205">Step one: creating Invocation Handlers</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making client use proxy instead of, <a class="indexterm" href="part0018.xhtml#iddle2206">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">passing in constructor, <a class="indexterm" href="part0018.xhtml#iddle2207">Creating Invocation Handlers continued...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">returning proxy for, <a class="indexterm" href="part0018.xhtml#iddle2208">Step two: creating the Proxy class and instantiating the Proxy object</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">refactoring, <a class="indexterm" href="part0016.xhtml#iddle2209">What do we need?</a>, <a class="indexterm" href="part0020.xhtml#iddle2210">You know you need a pattern when...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Related patterns section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle2211">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Remote Method Invocation (RMI)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2212">Adding a remote proxy to the Gumball Machine monitoring code</a>, <a class="indexterm" href="part0018.xhtml#iddle2213">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0018.xhtml#iddle2214">How does the client get the stub object?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">completing code for server side, <a class="indexterm" href="part0018.xhtml#iddle2215">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">importing java.rmi, <a class="indexterm" href="part0018.xhtml#iddle2216">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">importing packages, <a class="indexterm" href="part0018.xhtml#iddle2217">Getting the GumballMachine ready to be a remote service</a>, <a class="indexterm" href="part0018.xhtml#iddle2218">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making remote service, <a class="indexterm" href="part0018.xhtml#iddle2219">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">method call in, <a class="indexterm" href="part0018.xhtml#iddle2220">Remote methods 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle2221">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">things to watch out for in, <a class="indexterm" href="part0018.xhtml#iddle2222">How does the client get the stub object?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Remote proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2223">Testing the Monitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding to monitoring code, <a class="indexterm" href="part0018.xhtml#iddle2224">Adding a remote proxy to the Gumball Machine monitoring code</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">preparing for remote service, <a class="indexterm" href="part0018.xhtml#iddle2225">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle2226">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reusing client for, <a class="indexterm" href="part0018.xhtml#iddle2227">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle2228">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">role of, <a class="indexterm" href="part0018.xhtml#iddle2229">The role of the ‘remote proxy’</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle2230">Writing the Monitor test drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects and, <a class="indexterm" href="part0018.xhtml#iddle2231">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">remove() method</div><blockquote class="variable_list_definition"><div class="variable_list_term">Enumeration and, <a class="indexterm" href="part0014.xhtml#iddle2232">Dealing with the remove() method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in collection of objects, <a class="indexterm" href="part0016.xhtml#iddle2233">Making some improvements...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in java.util.Iterator, <a class="indexterm" href="part0016.xhtml#iddle2234">Iterator Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">requests, encapsulating, <a class="indexterm" href="part0013.xhtml#iddle2235">The Command Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">resources, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2236">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reuse, <a class="indexterm" href="part0008.xhtml#iddle2237">But something went horribly wrong...</a>, <a class="indexterm" href="part0010.xhtml#iddle2238">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">RMI (Remote Method Invocation)</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2239">Adding a remote proxy to the Gumball Machine monitoring code</a>, <a class="indexterm" href="part0018.xhtml#iddle2240">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0018.xhtml#iddle2241">How does the client get the stub object?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">completing code for server side, <a class="indexterm" href="part0018.xhtml#iddle2242">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">importing java.rmi, <a class="indexterm" href="part0018.xhtml#iddle2243">Getting the GumballMachine ready to be a remote service</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">importing packages, <a class="indexterm" href="part0018.xhtml#iddle2244">Getting the GumballMachine ready to be a remote service</a>, <a class="indexterm" href="part0018.xhtml#iddle2245">Now for the GumballMonitor client...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making remote service, <a class="indexterm" href="part0018.xhtml#iddle2246">Java RMI, the Big Picture</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">method call in, <a class="indexterm" href="part0018.xhtml#iddle2247">Remote methods 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">registering with RMI registry, <a class="indexterm" href="part0018.xhtml#iddle2248">Registering with the RMI registry...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">things to watch out for in, <a class="indexterm" href="part0018.xhtml#iddle2249">How does the client get the stub object?</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">rule of three, applied to Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2250">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">runtime errors, causes of, <a class="indexterm" href="part0011.xhtml#iddle2251">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>S</h3><div class="variable_list_term">Sample code section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle2252">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">server heap, <a class="indexterm" href="part0018.xhtml#iddle2253">Remote methods 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">service helper (skeletons), in RMI, <a class="indexterm" href="part0018.xhtml#iddle2254">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2255">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2256">How does the client get the stub object?</a>, <a class="indexterm" href="part0018.xhtml#iddle2257">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">servlet environment, setting up, <a class="indexterm" href="part0019.xhtml#iddle2258">Model 2: DJ’ing from a cell phone</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">shared vocabulary</div><blockquote class="variable_list_definition"><div class="variable_list_term">importance of, <a class="indexterm" href="part0008.xhtml#iddle2259">Overheard at the local diner...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">power of, <a class="indexterm" href="part0008.xhtml#iddle2260">The power of a shared pattern vocabulary</a>, <a class="indexterm" href="part0020.xhtml#iddle2261">Don’t forget the power of the shared vocabulary</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Sharpen Your Pencil</div><blockquote class="variable_list_definition"><div class="variable_list_term">altering decorator classes, <a class="indexterm" href="part0010.xhtml#iddle2262">Serving some coffees</a>, <a class="indexterm" href="part0010.xhtml#iddle2263">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating Gumball Machine States, <a class="indexterm" href="part0017.xhtml#iddle2264">Let’s take a look at what we’ve done so far...</a>, <a class="indexterm" href="part0017.xhtml#iddle2265">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating state diagram, <a class="indexterm" href="part0017.xhtml#iddle2266">Defining the State interfaces and classes</a>, <a class="indexterm" href="part0017.xhtml#iddle2267">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building ingredient factory, <a class="indexterm" href="part0011.xhtml#iddle2268">Building the New York ingredient factory</a>, <a class="indexterm" href="part0011.xhtml#iddle2269">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing classes for Decorator Pattern, <a class="indexterm" href="part0019.xhtml#iddle2270">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle2271">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing code to fit framework in Iterator Pattern, <a class="indexterm" href="part0016.xhtml#iddle2272">Taking a look at the Café Menu</a>, <a class="indexterm" href="part0016.xhtml#iddle2273">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">choosing descriptions of state of implementation, <a class="indexterm" href="part0017.xhtml#iddle2274">The messy STATE of things...</a>, <a class="indexterm" href="part0017.xhtml#iddle2275">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram for implementation of prepareRecipe(), <a class="indexterm" href="part0015.xhtml#iddle2276">Abstracting prepareRecipe()</a>, <a class="indexterm" href="part0015.xhtml#iddle2277">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code not using factories, <a class="indexterm" href="part0011.xhtml#iddle2278">A very dependent PizzaStore</a>, <a class="indexterm" href="part0011.xhtml#iddle2279">A very dependent PizzaStore</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating commands for off buttons, <a class="indexterm" href="part0013.xhtml#iddle2280">Using a macro command</a>, <a class="indexterm" href="part0013.xhtml#iddle2281">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating heat index, <a class="indexterm" href="part0009.xhtml#iddle2282">Power up the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">determining classes violating Principle of Least Knowledge, <a class="indexterm" href="part0014.xhtml#iddle2283">Keeping your method calls in bounds...</a>, <a class="indexterm" href="part0014.xhtml#iddle2284">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing beverage order process, <a class="indexterm" href="part0010.xhtml#iddle2285">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">fixing Chocolate Boiler code, <a class="indexterm" href="part0012.xhtml#iddle2286">Meanwhile, back at the Chocolate Factory...</a>, <a class="indexterm" href="part0012.xhtml#iddle2287">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">identifying factors influencing design, <a class="indexterm" href="part0010.xhtml#iddle2288">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing garage door command, <a class="indexterm" href="part0013.xhtml#iddle2289">Creating a simple test to use the Remote Control</a>, <a class="indexterm" href="part0013.xhtml#iddle2290">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing state classes, <a class="indexterm" href="part0017.xhtml#iddle2291">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle2292">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">making pizza store, <a class="indexterm" href="part0011.xhtml#iddle2293">Let’s make a PizzaStore</a>, <a class="indexterm" href="part0011.xhtml#iddle2294">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching patterns with categories, <a class="indexterm" href="part0020.xhtml#iddle2295">Organizing Design Patterns</a>, <a class="indexterm" href="part0020.xhtml#iddle2296">Organizing Design Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">method for refilling gumball machine, <a class="indexterm" href="part0017.xhtml#iddle2297">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle2298">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on adding behaviors, <a class="indexterm" href="part0008.xhtml#iddle2299">Implementing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on implementation of printmenu(), <a class="indexterm" href="part0016.xhtml#iddle2300">The Java-Enabled Waitress Specification</a>, <a class="indexterm" href="part0016.xhtml#iddle2301">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">on inheritance, <a class="indexterm" href="part0008.xhtml#iddle2302">Joe thinks about inheritance...</a>, <a class="indexterm" href="part0008.xhtml#iddle2303">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sketching out classes, <a class="indexterm" href="part0009.xhtml#iddle2304">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">things driving change, <a class="indexterm" href="part0008.xhtml#iddle2305">The one constant in software development</a>, <a class="indexterm" href="part0008.xhtml#iddle2306">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">turning class into Singleton, <a class="indexterm" href="part0012.xhtml#iddle2307">The Chocolate Factory</a>, <a class="indexterm" href="part0012.xhtml#iddle2308">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">weather station SWAG, <a class="indexterm" href="part0009.xhtml#iddle2309">Taking a first, misguided SWAG at the Weather Station</a>, <a class="indexterm" href="part0009.xhtml#iddle2310">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Abstract Factory Pattern, <a class="indexterm" href="part0019.xhtml#iddle2311">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle2312">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing classes for adapters, <a class="indexterm" href="part0014.xhtml#iddle2313">Here’s how the Client uses the Adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle2314">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing dynamic proxy, <a class="indexterm" href="part0018.xhtml#iddle2315">Step two: creating the Proxy class and instantiating the Proxy object</a>, <a class="indexterm" href="part0018.xhtml#iddle2316">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Flock observer code, <a class="indexterm" href="part0019.xhtml#iddle2317">Duck reunion</a>, <a class="indexterm" href="part0019.xhtml#iddle2318">Exercise Solutions</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing methods for classes, <a class="indexterm" href="part0010.xhtml#iddle2319">Welcome to Starbuzz Coffee</a>, <a class="indexterm" href="part0010.xhtml#iddle2320">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Simple Factory Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about factory objects, <a class="indexterm" href="part0011.xhtml#iddle2321">Encapsulating object creation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">building factory, <a class="indexterm" href="part0011.xhtml#iddle2322">Building a simple pizza factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0011.xhtml#iddle2323">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method Pattern and, <a class="indexterm" href="part0011.xhtml#iddle2324">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">pattern honorable mention, <a class="indexterm" href="part0011.xhtml#iddle2325">The Simple Factory defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using new operator for instantiating concrete classes, <a class="indexterm" href="part0011.xhtml#iddle2326">The Factory Pattern: Baking with OO Goodness</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Single Responsibility Principle, <a class="indexterm" href="part0016.xhtml#iddle2327">Single Responsibility</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Singleton objects, <a class="indexterm" href="part0012.xhtml#iddle2328">A small Socratic exercise in the style of The Little Lisper</a>, <a class="indexterm" href="part0012.xhtml#iddle2329">Dissecting the classic Singleton Pattern implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Singleton Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0012.xhtml#iddle2330">The Singleton Pattern: One of a Kind Objects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">advantages of, <a class="indexterm" href="part0012.xhtml#iddle2331">The Singleton Pattern: One of a Kind Objects</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Chocolate Factory</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0012.xhtml#iddle2332">The Chocolate Factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">fixing Chocolate Boiler code, <a class="indexterm" href="part0012.xhtml#iddle2333">Meanwhile, back at the Chocolate Factory...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0012.xhtml#iddle2334">Singleton Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0012.xhtml#iddle2335">Dissecting the classic Singleton Pattern implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">dealing with multithreading, <a class="indexterm" href="part0012.xhtml#iddle2336">Houston, Hershey, PA we have a problem...</a>, <a class="indexterm" href="part0012.xhtml#iddle2337">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0012.xhtml#iddle2338">Singleton Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">disadvantages of, <a class="indexterm" href="part0012.xhtml#iddle2339">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">double-checked locking, <a class="indexterm" href="part0012.xhtml#iddle2340">3. Use “double-checked locking” to reduce the use of synchronization in getInstance().</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0020.xhtml#iddle2341">So you wanna be a Design Patterns writer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">global variables vs., <a class="indexterm" href="part0012.xhtml#iddle2342">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0012.xhtml#iddle2343">Dissecting the classic Singleton Pattern implementation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">One Class, One Responsibility Principle and, <a class="indexterm" href="part0012.xhtml#iddle2344">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">subclasses in, <a class="indexterm" href="part0012.xhtml#iddle2345">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0012.xhtml#iddle2346">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">skeletons (service helper), in RMI, <a class="indexterm" href="part0018.xhtml#iddle2347">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2348">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2349">How does the client get the stub object?</a>, <a class="indexterm" href="part0018.xhtml#iddle2350">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">smart command objects, <a class="indexterm" href="part0013.xhtml#iddle2351">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Smart Reference Proxy, <a class="indexterm" href="part0018.xhtml#iddle2352">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sorting methods, in Template Method Pattern, <a class="indexterm" href="part0015.xhtml#iddle2353">Sorting with Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Starbuzz Coffee Barista training manual project</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle2354">It’s time for some more caffeine</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">abstracting prepareRecipe(), <a class="indexterm" href="part0015.xhtml#iddle2355">Abstracting prepareRecipe()</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Template Method Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle2356">Meet the Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0015.xhtml#iddle2357">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle2358">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hooks in, <a class="indexterm" href="part0015.xhtml#iddle2360">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0015.xhtml#iddle2361">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle and, <a class="indexterm" href="part0015.xhtml#iddle2359">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote></blockquote></blockquote><div class="variable_list_term">Starbuzz Coffee project, using Decorator Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0010.xhtml#iddle2362">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">adding sizes to code, <a class="indexterm" href="part0010.xhtml#iddle2363">Serving some coffees</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">constructing drink orders, <a class="indexterm" href="part0010.xhtml#iddle2364">Constructing a drink order with Decorators</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">decorating beverages in, <a class="indexterm" href="part0010.xhtml#iddle2365">Decorating our Beverages</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing beverage order process, <a class="indexterm" href="part0010.xhtml#iddle2366">New barista training</a>, <a class="indexterm" href="part0010.xhtml#iddle2367">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing order code, <a class="indexterm" href="part0010.xhtml#iddle2368">Serving some coffees</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using Java decorators, <a class="indexterm" href="part0010.xhtml#iddle2369">Real World Decorators: Java I/O</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing code, <a class="indexterm" href="part0010.xhtml#iddle2370">Writing the Starbuzz code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">state machines, <a class="indexterm" href="part0017.xhtml#iddle2371">State machines 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">State Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">definition of, <a class="indexterm" href="part0017.xhtml#iddle2372">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0017.xhtml#iddle2373">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle2374">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle2375">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle2376">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">gumball machine controller implementation</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0017.xhtml#iddle2377">Jawva Breakers</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">cleaning up code, <a class="indexterm" href="part0017.xhtml#iddle2378">Sanity check...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">demonstration of, <a class="indexterm" href="part0017.xhtml#iddle2379">Demo for the CEO of Mighty Gumball, Inc.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">diagram to code, <a class="indexterm" href="part0017.xhtml#iddle2380">State machines 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">finishing, <a class="indexterm" href="part0017.xhtml#iddle2381">Finishing the game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">refilling gumball machine, <a class="indexterm" href="part0017.xhtml#iddle2382">We almost forgot!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">SoldState and WinnerState in, <a class="indexterm" href="part0017.xhtml#iddle2383">Demo for the CEO of Mighty Gumball, Inc.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0017.xhtml#iddle2384">In-house testing</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing code, <a class="indexterm" href="part0017.xhtml#iddle2385">Writing the code</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">increasing number of classes in design, <a class="indexterm" href="part0017.xhtml#iddle2386">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">modeling state, <a class="indexterm" href="part0017.xhtml#iddle2387">State machines 101</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">one in ten contest in gumball machine</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0017.xhtml#iddle2388">You knew it was coming... a change request!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">annotating state diagram, <a class="indexterm" href="part0017.xhtml#iddle2389">Defining the State interfaces and classes</a>, <a class="indexterm" href="part0017.xhtml#iddle2390">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">changing code, <a class="indexterm" href="part0017.xhtml#iddle2391">The messy STATE of things...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">drawing state diagram, <a class="indexterm" href="part0017.xhtml#iddle2392">You knew it was coming... a change request!</a>, <a class="indexterm" href="part0017.xhtml#iddle2393">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing state classes, <a class="indexterm" href="part0017.xhtml#iddle2394">Implementing our State classes</a>, <a class="indexterm" href="part0017.xhtml#iddle2395">Implementing more states</a>, <a class="indexterm" href="part0017.xhtml#iddle2396">We still need to finish the Gumball 1 in 10 game</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">new design, <a class="indexterm" href="part0017.xhtml#iddle2397">The new design</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reworking state classes, <a class="indexterm" href="part0017.xhtml#iddle2398">Reworking the Gumball Machine</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">sharing state objects, <a class="indexterm" href="part0017.xhtml#iddle2399">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state transitions in state classes, <a class="indexterm" href="part0017.xhtml#iddle2400">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern vs., <a class="indexterm" href="part0017.xhtml#iddle2401">The State Pattern defined</a>, <a class="indexterm" href="part0017.xhtml#iddle2402">Sanity check...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">state transitions, in state classes, <a class="indexterm" href="part0017.xhtml#iddle2403">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">state, using to implement undo commands, <a class="indexterm" href="part0013.xhtml#iddle2404">Using state to implement Undo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">static classes, using instead of Singletons, <a class="indexterm" href="part0012.xhtml#iddle2405">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">static method vs. create method, <a class="indexterm" href="part0011.xhtml#iddle2406">Building a simple pizza factory</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">definition of, <a class="indexterm" href="part0008.xhtml#iddle2407">Speaking of Design Patterns...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0015.xhtml#iddle2408">The Hollywood Principle and Template Method</a>, <a class="indexterm" href="part0015.xhtml#iddle2409">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0016.xhtml#iddle2410">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle2411">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle2412">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle2413">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle2414">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle2415">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model 2, <a class="indexterm" href="part0019.xhtml#iddle2416">Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Model-View-Controller, <a class="indexterm" href="part0019.xhtml#iddle2417">Looking at MVC through patterns-colored glasses</a>, <a class="indexterm" href="part0019.xhtml#iddle2418">Now for the Controller</a>, <a class="indexterm" href="part0019.xhtml#iddle2419">Exploring Strategy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">State Pattern vs., <a class="indexterm" href="part0017.xhtml#iddle2420">The State Pattern defined</a>, <a class="indexterm" href="part0017.xhtml#iddle2421">Sanity check...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Template Method Pattern and, <a class="indexterm" href="part0015.xhtml#iddle2422">The making of the sorting duck machine</a>, <a class="indexterm" href="part0015.xhtml#iddle2423">Applets</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">structural patterns category, Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2424">Pattern Categories</a>, <a class="indexterm" href="part0020.xhtml#iddle2425">Pattern Categories</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Structure section, in pattern catalog, <a class="indexterm" href="part0020.xhtml#iddle2426">Looking more closely at the Design Pattern definition</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">stubs (client helper), in RMI, <a class="indexterm" href="part0018.xhtml#iddle2427">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2428">Java RMI, the Big Picture</a>, <a class="indexterm" href="part0018.xhtml#iddle2429">How does the client get the stub object?</a>, <a class="indexterm" href="part0018.xhtml#iddle2430">And now let’s put the monitor in the hands of the CEO. Hopefully, this time he’ll love it</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">subclasses</div><blockquote class="variable_list_definition"><div class="variable_list_term">class explosion and, <a class="indexterm" href="part0010.xhtml#iddle2431">Welcome to Starbuzz Coffee</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete commands and, <a class="indexterm" href="part0013.xhtml#iddle2432">The Command Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">concrete states and, <a class="indexterm" href="part0017.xhtml#iddle2433">The State Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Factory Method and, letting subclasses decide which class to instantiate, <a class="indexterm" href="part0011.xhtml#iddle2434">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Singletons, <a class="indexterm" href="part0012.xhtml#iddle2436">Congratulations!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">inheritance gone wrong and, <a class="indexterm" href="part0008.xhtml#iddle2435">But something went horribly wrong...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Pizza Store concrete, <a class="indexterm" href="part0011.xhtml#iddle2437">Allowing the subclasses to decide</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Template Method, <a class="indexterm" href="part0015.xhtml#iddle2438">Meet the Template Method</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Subject</div><blockquote class="variable_list_definition"><div class="variable_list_term">in class diagram, <a class="indexterm" href="part0009.xhtml#iddle2439">The Observer Pattern defined: the class diagram</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Five Minute Drama, <a class="indexterm" href="part0009.xhtml#iddle2440">Five-minute drama: a subject for observation</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle2441">Publishers + Subscribers = Observer Pattern</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">subsystems, Facades and, <a class="indexterm" href="part0014.xhtml#iddle2442">Lights, Camera, Facade!</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">superclasses</div><blockquote class="variable_list_definition"><div class="variable_list_term">abstract, <a class="indexterm" href="part0008.xhtml#iddle2443">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using, <a class="indexterm" href="part0008.xhtml#iddle2444">But something went horribly wrong...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">supertype (programming to interface), vs. programming to interface, <a class="indexterm" href="part0008.xhtml#iddle2445">Designing the Duck Behaviors</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">SWAG, <a class="indexterm" href="part0009.xhtml#iddle2446">Taking a first, misguided SWAG at the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Swing</div><blockquote class="variable_list_definition"><div class="variable_list_term">Composite Pattern and, <a class="indexterm" href="part0019.xhtml#iddle2447">Composite</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Observer Pattern in, <a class="indexterm" href="part0009.xhtml#iddle2448">Other places you’ll find the Observer Pattern in the JDK</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Template Method Pattern and, <a class="indexterm" href="part0015.xhtml#iddle2449">Swingin’ with Frames</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Synchronization Proxy, <a class="indexterm" href="part0018.xhtml#iddle2451">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">synchronization, as overhead, <a class="indexterm" href="part0012.xhtml#iddle2450">Dealing with multithreading</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>T</h3><div class="variable_list_term">Template Method Pattern</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0015.xhtml#iddle2452">Meet the Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">abstract class in</div><blockquote class="variable_list_definition"><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle2453">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hooks vs., <a class="indexterm" href="part0015.xhtml#iddle2454">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">methods in, <a class="indexterm" href="part0015.xhtml#iddle2455">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Applet and, <a class="indexterm" href="part0015.xhtml#iddle2456">Applets</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">class diagram, <a class="indexterm" href="part0015.xhtml#iddle2457">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">code up close, <a class="indexterm" href="part0015.xhtml#iddle2458">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">definition of, <a class="indexterm" href="part0015.xhtml#iddle2459">Template Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">exercise matching description of, <a class="indexterm" href="part0015.xhtml#iddle2460">The Hollywood Principle and Template Method</a>, <a class="indexterm" href="part0015.xhtml#iddle2461">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle2462">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle2463">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle2464">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle2465">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">hooks in, <a class="indexterm" href="part0015.xhtml#iddle2467">Template Method Pattern defined</a>, <a class="indexterm" href="part0015.xhtml#iddle2468">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">in real world, <a class="indexterm" href="part0015.xhtml#iddle2469">Template Methods in the Wild</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">sorting with, <a class="indexterm" href="part0015.xhtml#iddle2470">Sorting with Template Method</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Strategy Pattern and, <a class="indexterm" href="part0015.xhtml#iddle2471">The making of the sorting duck machine</a>, <a class="indexterm" href="part0015.xhtml#iddle2472">Applets</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Swing and, <a class="indexterm" href="part0015.xhtml#iddle2473">Swingin’ with Frames</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing code, <a class="indexterm" href="part0015.xhtml#iddle2474">Let’s run the Test Drive</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">The Hollywood Principle and, <a class="indexterm" href="part0015.xhtml#iddle2466">The Hollywood Principle</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">The Timeless Way of Building (Alexander), <a class="indexterm" href="part0020.xhtml#iddle2477">Your journey has just begun...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">thinking in patterns, <a class="indexterm" href="part0020.xhtml#iddle2475">Thinking in Patterns</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">tightly coupled, <a class="indexterm" href="part0009.xhtml#iddle2476">The power of Loose Coupling</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">transparency, in Composite Pattern, <a class="indexterm" href="part0016.xhtml#iddle2478">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">tree structure, Composite Pattern, <a class="indexterm" href="part0016.xhtml#iddle2479">The Composite Pattern defined</a>, <a class="indexterm" href="part0016.xhtml#iddle2480">Getting ready for a test drive...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">try/catch, not supporting method, <a class="indexterm" href="part0016.xhtml#iddle2481">The magic of Iterator &amp; Composite together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Two Way Adapters, creating, <a class="indexterm" href="part0014.xhtml#iddle2482">Here’s how the Client uses the Adapter</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">type safe parameters, <a class="indexterm" href="part0011.xhtml#iddle2483">Factory Method Pattern defined</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>U</h3><div class="variable_list_term">undo commands</div><blockquote class="variable_list_definition"><div class="variable_list_term">creating, <a class="indexterm" href="part0013.xhtml#iddle2484">Time to write that documentation...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">creating multiple, <a class="indexterm" href="part0013.xhtml#iddle2485">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing for macro command, <a class="indexterm" href="part0013.xhtml#iddle2486">Using a macro command</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">support of, <a class="indexterm" href="part0013.xhtml#iddle2487">Time to write that documentation...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0013.xhtml#iddle2488">Time to QA that Undo button!</a>, <a class="indexterm" href="part0013.xhtml#iddle2489">Get ready to test the ceiling fan</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using state to implement, <a class="indexterm" href="part0013.xhtml#iddle2490">Using state to implement Undo</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">User Interface Design Patterns, <a class="indexterm" href="part0020.xhtml#iddle2491">The Patterns Zoo</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>V</h3><div class="variable_list_term">variables</div><blockquote class="variable_list_definition"><div class="variable_list_term">declaring behavior, <a class="indexterm" href="part0008.xhtml#iddle2492">Integrating the Duck Behavior</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">holding reference to concrete class, <a class="indexterm" href="part0011.xhtml#iddle2493">A few guidelines to help you follow the Principle...</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Vector, <a class="indexterm" href="part0016.xhtml#iddle2494">Iterators and Collections</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">vegetarian menu, using Composite Pattern, <a class="indexterm" href="part0016.xhtml#iddle2495">Give me the vegetarian menu</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Virtual Proxy</div><blockquote class="variable_list_definition"><div class="variable_list_term">about, <a class="indexterm" href="part0018.xhtml#iddle2496">Get ready for Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Caching Proxy as form of, <a class="indexterm" href="part0018.xhtml#iddle2497">What did we do?</a>, <a class="indexterm" href="part0018.xhtml#iddle2498">The Proxy Zoo</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing Virtual Proxy, <a class="indexterm" href="part0018.xhtml#iddle2499">Designing the CD cover Virtual Proxy</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">reviewing process, <a class="indexterm" href="part0018.xhtml#iddle2500">What did we do?</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">testing, <a class="indexterm" href="part0018.xhtml#iddle2501">Testing the CD Cover Viewer</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">writing Image Proxy, <a class="indexterm" href="part0018.xhtml#iddle2502">Writing the Image Proxy</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">Visitor Pattern, <a class="indexterm" href="part0021.xhtml#iddle2503">Visitor</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Vlissides, John, <a class="indexterm" href="part0020.xhtml#iddle2504">Cruisin’ Objectville with the Gang of Four</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">volatile keyword, <a class="indexterm" href="part0012.xhtml#iddle2505">3. Use “double-checked locking” to reduce the use of synchronization in getInstance().</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>W</h3><div class="variable_list_term">weather station</div><blockquote class="variable_list_definition"><div class="variable_list_term">building display elements, <a class="indexterm" href="part0009.xhtml#iddle2506">Now, let’s build those display elements</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">designing, <a class="indexterm" href="part0009.xhtml#iddle2507">Designing the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">implementing, <a class="indexterm" href="part0009.xhtml#iddle2508">Implementing the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">powering up, <a class="indexterm" href="part0009.xhtml#iddle2509">Power up the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">SWAG, <a class="indexterm" href="part0009.xhtml#iddle2510">Taking a first, misguided SWAG at the Weather Station</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">unpacking classes, <a class="indexterm" href="part0009.xhtml#iddle2511">Unpacking the WeatherData class</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">using built-in Java Observer Pattern, <a class="indexterm" href="part0009.xhtml#iddle2512">Reworking the Weather Station with the built-in support</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">web, Model-View-Controller and, <a class="indexterm" href="part0019.xhtml#iddle2513">MVC and the Web</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">Who Does What exercises</div><blockquote class="variable_list_definition"><div class="variable_list_term">matching objects and methods to Command Pattern, <a class="indexterm" href="part0013.xhtml#iddle2514">From the Diner to the Command Pattern</a>, <a class="indexterm" href="part0013.xhtml#iddle2515">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching pattern with description, <a class="indexterm" href="part0015.xhtml#iddle2517">The Hollywood Principle and Template Method</a>, <a class="indexterm" href="part0015.xhtml#iddle2518">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0016.xhtml#iddle2519">The magic of Iterator &amp; Composite together...</a>, <a class="indexterm" href="part0016.xhtml#iddle2520">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0017.xhtml#iddle2521">We almost forgot!</a>, <a class="indexterm" href="part0017.xhtml#iddle2522">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0018.xhtml#iddle2523">Running the code...</a>, <a class="indexterm" href="part0018.xhtml#iddle2524">Tools for your Design Toolbox</a>, <a class="indexterm" href="part0020.xhtml#iddle2525">So you wanna be a Design Patterns writer</a>, <a class="indexterm" href="part0020.xhtml#iddle2526">Boy, it’s been great having you in Objectville.</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">matching patterns with its intent, <a class="indexterm" href="part0014.xhtml#iddle2516">Tools for your Design Toolbox</a></div><blockquote class="variable_list_definition"></blockquote></blockquote><div class="variable_list_term">whole-part relationships, collection of objects using, <a class="indexterm" href="part0016.xhtml#iddle2527">The magic of Iterator &amp; Composite together...</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wickedlysmart web site, <a class="indexterm" href="part0007.xhtml#iddle2528">Read Me</a></div><blockquote class="variable_list_definition"></blockquote><div class="variable_list_term">wrapping objects, <a class="indexterm" href="part0010.xhtml#iddle2529">Meet the Decorator Pattern</a>, <a class="indexterm" href="part0014.xhtml#iddle2530">Here’s how the Client uses the Adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle2531">Writing the EnumerationIterator adapter</a>, <a class="indexterm" href="part0014.xhtml#iddle2532">Lights, Camera, Facade!</a>, <a class="indexterm" href="part0018.xhtml#iddle2533">What did we do?</a>, <a class="indexterm" href="part0019.xhtml#iddle2534">Duck reunion</a></div><blockquote class="variable_list_definition"></blockquote></div><div class="indexdiv"><h3>Y</h3><div class="variable_list_term">your mind on patterns, <a class="indexterm" href="part0020.xhtml#iddle2535">Your Mind on Patterns</a></div><blockquote class="variable_list_definition"></blockquote></div></div></div></body></html>